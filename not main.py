# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(986, 572)
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        Form.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-combo-chart-90.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)
        Form.setStyleSheet("background-color: rgb(33, 43, 51);\n"
"")
        self.horizontalLayout = QtWidgets.QHBoxLayout(Form)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.stackedWidget = QtWidgets.QStackedWidget(Form)
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        self.stackedWidget.setFont(font)
        self.stackedWidget.setObjectName("stackedWidget")
        self.loginPage = QtWidgets.QWidget()
        self.loginPage.setObjectName("loginPage")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.loginPage)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame = QtWidgets.QFrame(self.loginPage)
        self.frame.setMinimumSize(QtCore.QSize(471, 513))
        self.frame.setStyleSheet("background-image: url(:/images/images/reversed.jpg);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_2.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(self.loginPage)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        self.frame_3.setMinimumSize(QtCore.QSize(450, 493))
        self.frame_3.setMaximumSize(QtCore.QSize(450, 493))
        self.frame_3.setStyleSheet("background-color: rgb(33, 40, 41);\n"
"border-radius: 10px\n"
"")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.label = QtWidgets.QLabel(self.frame_3)
        self.label.setGeometry(QtCore.QRect(37, 50, 351, 51))
        self.label.setMinimumSize(QtCore.QSize(351, 51))
        self.label.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(168, 168, 168);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.frame_3)
        self.label_2.setGeometry(QtCore.QRect(80, 120, 351, 21))
        self.label_2.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.frame_3)
        self.label_3.setGeometry(QtCore.QRect(80, 200, 351, 21))
        self.label_3.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(168, 168, 168);\n"
"")
        self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(self.frame_3)
        self.lineEdit.setGeometry(QtCore.QRect(80, 140, 271, 31))
        self.lineEdit.setStyleSheet("color: rgb(168, 168, 168);\n"
"border-bottom: 2px solid rgb(168, 168, 168);\n"
"border-radius:0px")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_3)
        self.lineEdit_2.setGeometry(QtCore.QRect(80, 220, 281, 31))
        self.lineEdit_2.setStyleSheet("color: rgb(168, 168, 168);\n"
"border-bottom: 2px solid rgb(168, 168, 168);\n"
"border-radius:0px")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.frame_3)
        self.pushButton.setGeometry(QtCore.QRect(140, 320, 161, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("background-color: rgb(12, 39, 189);\n"
"border-radius:5px")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_2.setGeometry(QtCore.QRect(150, 412, 141, 31))
        self.pushButton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_3.setGeometry(QtCore.QRect(280, 250, 81, 21))
        font = QtGui.QFont()
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_3.setStyleSheet("color: rgb(255, 0, 0)")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_9 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_9.setGeometry(QtCore.QRect(320, 210, 41, 41))
        self.pushButton_9.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_9.setStyleSheet("color: rgb(168, 168, 168);\n"
"border-bottom: 2px solid rgb(168, 168, 168);\n"
"border-radius:0px")
        self.pushButton_9.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-lock-384.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_9.setIcon(icon1)
        self.pushButton_9.setIconSize(QtCore.QSize(22, 22))
        self.pushButton_9.setObjectName("pushButton_9")
        self.label_33 = QtWidgets.QLabel(self.frame_3)
        self.label_33.setGeometry(QtCore.QRect(80, 170, 271, 20))
        self.label_33.setStyleSheet("color: rgb(255, 0, 0)")
        self.label_33.setText("")
        self.label_33.setObjectName("label_33")
        self.label_34 = QtWidgets.QLabel(self.frame_3)
        self.label_34.setGeometry(QtCore.QRect(80, 250, 271, 20))
        self.label_34.setStyleSheet("color: rgb(255, 0, 0)")
        self.label_34.setText("")
        self.label_34.setObjectName("label_34")
        self.label.raise_()
        self.label_2.raise_()
        self.label_3.raise_()
        self.pushButton.raise_()
        self.pushButton_2.raise_()
        self.label_33.raise_()
        self.label_34.raise_()
        self.pushButton_3.raise_()
        self.lineEdit_2.raise_()
        self.lineEdit.raise_()
        self.pushButton_9.raise_()
        self.horizontalLayout_3.addWidget(self.frame_3)
        self.horizontalLayout_2.addWidget(self.frame_2)
        self.stackedWidget.addWidget(self.loginPage)
        self.SignupPage = QtWidgets.QWidget()
        self.SignupPage.setObjectName("SignupPage")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.SignupPage)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.frame_5 = QtWidgets.QFrame(self.SignupPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_5.sizePolicy().hasHeightForWidth())
        self.frame_5.setSizePolicy(sizePolicy)
        self.frame_5.setMinimumSize(QtCore.QSize(230, 491))
        self.frame_5.setMaximumSize(QtCore.QSize(500, 16777215))
        self.frame_5.setStyleSheet("background-color: rgb(117, 117, 117);")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_5)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_12 = QtWidgets.QLabel(self.frame_5)
        self.label_12.setMinimumSize(QtCore.QSize(210, 51))
        self.label_12.setMaximumSize(QtCore.QSize(211, 51))
        self.label_12.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("border-left:7px solid rgb(33, 43, 51);\n"
"background-color: rgb(100, 100, 100);\n"
"")
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.verticalLayout_2.addWidget(self.label_12)
        self.label_13 = QtWidgets.QLabel(self.frame_5)
        self.label_13.setMaximumSize(QtCore.QSize(211, 51))
        self.label_13.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("background-color: rgb(100, 100, 100);\n"
"")
        self.label_13.setAlignment(QtCore.Qt.AlignCenter)
        self.label_13.setObjectName("label_13")
        self.verticalLayout_2.addWidget(self.label_13)
        self.label_14 = QtWidgets.QLabel(self.frame_5)
        self.label_14.setMaximumSize(QtCore.QSize(211, 51))
        self.label_14.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("background-color: rgb(100, 100, 100);\n"
"")
        self.label_14.setAlignment(QtCore.Qt.AlignCenter)
        self.label_14.setObjectName("label_14")
        self.verticalLayout_2.addWidget(self.label_14)
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_5)
        self.pushButton_5.setMinimumSize(QtCore.QSize(161, 41))
        self.pushButton_5.setMaximumSize(QtCore.QSize(205, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_5.setStyleSheet("background-color: rgb(12, 39, 189);\n"
"border-radius:5px")
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout_2.addWidget(self.pushButton_5, 0, QtCore.Qt.AlignHCenter)
        self.horizontalLayout_4.addWidget(self.frame_5)
        self.frame_4 = QtWidgets.QFrame(self.SignupPage)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_4)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.stackedWidget_2 = QtWidgets.QStackedWidget(self.frame_4)
        self.stackedWidget_2.setObjectName("stackedWidget_2")
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.page_3)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.frame_8 = QtWidgets.QFrame(self.page_3)
        self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.horizontalLayout_5.addWidget(self.frame_8)
        self.frame_9 = QtWidgets.QFrame(self.page_3)
        self.frame_9.setMinimumSize(QtCore.QSize(650, 0))
        self.frame_9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_9.setObjectName("frame_9")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_9)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_11 = QtWidgets.QFrame(self.frame_9)
        self.frame_11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_11.setObjectName("frame_11")
        self.verticalLayout_3.addWidget(self.frame_11)
        self.frame_12 = QtWidgets.QFrame(self.frame_9)
        self.frame_12.setMinimumSize(QtCore.QSize(0, 490))
        self.frame_12.setSizeIncrement(QtCore.QSize(0, 0))
        self.frame_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_12.setObjectName("frame_12")
        self.label_7 = QtWidgets.QLabel(self.frame_12)
        self.label_7.setGeometry(QtCore.QRect(360, 175, 351, 31))
        self.label_7.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.label_16 = QtWidgets.QLabel(self.frame_12)
        self.label_16.setGeometry(QtCore.QRect(0, -10, 641, 61))
        self.label_16.setMinimumSize(QtCore.QSize(351, 51))
        self.label_16.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(18)
        self.label_16.setFont(font)
        self.label_16.setStyleSheet("color: rgb(168, 168, 168);")
        self.label_16.setAlignment(QtCore.Qt.AlignCenter)
        self.label_16.setObjectName("label_16")
        self.label_11 = QtWidgets.QLabel(self.frame_12)
        self.label_11.setGeometry(QtCore.QRect(30, 235, 321, 16))
        self.label_11.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(9)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("color: rgb(255, 0, 0);")
        self.label_11.setText("")
        self.label_11.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")
        self.label_8 = QtWidgets.QLabel(self.frame_12)
        self.label_8.setGeometry(QtCore.QRect(30, 175, 271, 31))
        self.label_8.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_8.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.label_5 = QtWidgets.QLabel(self.frame_12)
        self.label_5.setGeometry(QtCore.QRect(30, 73, 271, 31))
        self.label_5.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.label_10 = QtWidgets.QLabel(self.frame_12)
        self.label_10.setGeometry(QtCore.QRect(360, 274, 351, 31))
        self.label_10.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_10.setObjectName("label_10")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame_12)
        self.lineEdit_3.setGeometry(QtCore.QRect(30, 103, 271, 31))
        self.lineEdit_3.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:4px;\n"
"padding-left:5px\n"
"")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.frame_12)
        self.lineEdit_5.setGeometry(QtCore.QRect(30, 205, 271, 31))
        self.lineEdit_5.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:4px;\n"
"padding-left:5px\n"
"\n"
"")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.label_6 = QtWidgets.QLabel(self.frame_12)
        self.label_6.setGeometry(QtCore.QRect(360, 73, 351, 31))
        self.label_6.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame_12)
        self.lineEdit_4.setGeometry(QtCore.QRect(360, 103, 271, 31))
        self.lineEdit_4.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:4px;\n"
"padding-left:5px\n"
"\n"
"")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label_15 = QtWidgets.QLabel(self.frame_12)
        self.label_15.setGeometry(QtCore.QRect(38, 315, 22, 21))
        self.label_15.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(9)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_15.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_15.setObjectName("label_15")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame_12)
        self.lineEdit_6.setGeometry(QtCore.QRect(360, 205, 271, 31))
        self.lineEdit_6.setStyleSheet("color: rgb(168, 168, 168);\n"
"border-bottom: 2px solid rgb(168, 168, 168);\n"
"border-radius:0px;\n"
"padding-left:5px\n"
"")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.label_9 = QtWidgets.QLabel(self.frame_12)
        self.label_9.setGeometry(QtCore.QRect(30, 277, 271, 31))
        self.label_9.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_9.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.frame_12)
        self.lineEdit_8.setGeometry(QtCore.QRect(30, 309, 271, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_8.setFont(font)
        self.lineEdit_8.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:5px;\n"
"padding-left:30px")
        self.lineEdit_8.setText("")
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.layoutWidget = QtWidgets.QWidget(self.frame_12)
        self.layoutWidget.setGeometry(QtCore.QRect(360, 301, 191, 41))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.radioButton_3 = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButton_3.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-user-male-480.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.radioButton_3.setIcon(icon2)
        self.radioButton_3.setIconSize(QtCore.QSize(28, 28))
        self.radioButton_3.setChecked(True)
        self.radioButton_3.setObjectName("radioButton_3")
        self.horizontalLayout_8.addWidget(self.radioButton_3)
        self.radioButton_4 = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButton_4.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-female-user-480.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.radioButton_4.setIcon(icon3)
        self.radioButton_4.setIconSize(QtCore.QSize(28, 28))
        self.radioButton_4.setObjectName("radioButton_4")
        self.horizontalLayout_8.addWidget(self.radioButton_4)
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_12)
        self.pushButton_4.setGeometry(QtCore.QRect(250, 410, 161, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_4.setStyleSheet("background-color: rgb(0, 193, 0);\n"
"\n"
"border-radius:5px")
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_7.raise_()
        self.label_16.raise_()
        self.label_11.raise_()
        self.label_8.raise_()
        self.label_5.raise_()
        self.label_10.raise_()
        self.label_6.raise_()
        self.lineEdit_4.raise_()
        self.lineEdit_6.raise_()
        self.label_9.raise_()
        self.lineEdit_8.raise_()
        self.layoutWidget.raise_()
        self.pushButton_4.raise_()
        self.lineEdit_5.raise_()
        self.lineEdit_3.raise_()
        self.label_15.raise_()
        self.verticalLayout_3.addWidget(self.frame_12)
        self.frame_13 = QtWidgets.QFrame(self.frame_9)
        self.frame_13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_13.setObjectName("frame_13")
        self.verticalLayout_3.addWidget(self.frame_13)
        self.horizontalLayout_5.addWidget(self.frame_9)
        self.frame_10 = QtWidgets.QFrame(self.page_3)
        self.frame_10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_10.setObjectName("frame_10")
        self.horizontalLayout_5.addWidget(self.frame_10)
        self.stackedWidget_2.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.page_4)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setSpacing(0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.frame_14 = QtWidgets.QFrame(self.page_4)
        self.frame_14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_14.setObjectName("frame_14")
        self.horizontalLayout_9.addWidget(self.frame_14)
        self.frame_15 = QtWidgets.QFrame(self.page_4)
        self.frame_15.setMinimumSize(QtCore.QSize(600, 0))
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_15)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.frame_17 = QtWidgets.QFrame(self.frame_15)
        self.frame_17.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_17.setObjectName("frame_17")
        self.verticalLayout_4.addWidget(self.frame_17, 0, QtCore.Qt.AlignTop)
        self.frame_18 = QtWidgets.QFrame(self.frame_15)
        self.frame_18.setMinimumSize(QtCore.QSize(0, 530))
        self.frame_18.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_18.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_18.setObjectName("frame_18")
        self.label_18 = QtWidgets.QLabel(self.frame_18)
        self.label_18.setGeometry(QtCore.QRect(160, 210, 271, 21))
        self.label_18.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_18.setFont(font)
        self.label_18.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_18.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_18.setObjectName("label_18")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.frame_18)
        self.lineEdit_7.setGeometry(QtCore.QRect(160, 130, 281, 31))
        self.lineEdit_7.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:4px;\n"
"padding-left:5px\n"
"\n"
"")
        self.lineEdit_7.setText("")
        self.lineEdit_7.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.label_20 = QtWidgets.QLabel(self.frame_18)
        self.label_20.setGeometry(QtCore.QRect(160, 160, 301, 16))
        self.label_20.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        font.setKerning(True)
        self.label_20.setFont(font)
        self.label_20.setStyleSheet("color: rgb(255, 0, 4);\n"
"")
        self.label_20.setText("")
        self.label_20.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_20.setObjectName("label_20")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.frame_18)
        self.lineEdit_9.setGeometry(QtCore.QRect(160, 230, 281, 31))
        self.lineEdit_9.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:4px;\n"
"padding-left:5px\n"
"")
        self.lineEdit_9.setText("")
        self.lineEdit_9.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.label_19 = QtWidgets.QLabel(self.frame_18)
        self.label_19.setGeometry(QtCore.QRect(-30, -10, 701, 81))
        self.label_19.setMinimumSize(QtCore.QSize(351, 51))
        self.label_19.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(23)
        self.label_19.setFont(font)
        self.label_19.setStyleSheet("color: rgb(168, 168, 168);")
        self.label_19.setAlignment(QtCore.Qt.AlignCenter)
        self.label_19.setObjectName("label_19")
        self.label_22 = QtWidgets.QLabel(self.frame_18)
        self.label_22.setGeometry(QtCore.QRect(160, 260, 301, 16))
        self.label_22.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        font.setKerning(True)
        self.label_22.setFont(font)
        self.label_22.setStyleSheet("color: rgb(255, 0, 4);\n"
"")
        self.label_22.setText("")
        self.label_22.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_22.setObjectName("label_22")
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_18)
        self.pushButton_8.setGeometry(QtCore.QRect(400, 130, 41, 31))
        self.pushButton_8.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_8.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-left: 1px solid rgb(33, 43, 51);\n"
"border-radius:4px;\n"
"border-top-left-radius: 0px;\n"
"border-bottom-left-radius: 0px;\n"
"\n"
"\n"
"")
        self.pushButton_8.setText("")
        self.pushButton_8.setIcon(icon1)
        self.pushButton_8.setIconSize(QtCore.QSize(22, 22))
        self.pushButton_8.setObjectName("pushButton_8")
        self.label_17 = QtWidgets.QLabel(self.frame_18)
        self.label_17.setGeometry(QtCore.QRect(160, 100, 271, 31))
        self.label_17.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_17.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_17.setObjectName("label_17")
        self.pushButton_7 = QtWidgets.QPushButton(self.frame_18)
        self.pushButton_7.setGeometry(QtCore.QRect(400, 230, 41, 31))
        self.pushButton_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_7.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-left: 1px solid rgb(33, 43, 51);\n"
"border-radius:4px;\n"
"border-top-left-radius: 0px;\n"
"border-bottom-left-radius: 0px;\n"
"\n"
"\n"
"")
        self.pushButton_7.setText("")
        self.pushButton_7.setIcon(icon1)
        self.pushButton_7.setIconSize(QtCore.QSize(22, 22))
        self.pushButton_7.setObjectName("pushButton_7")
        self.checkBox = QtWidgets.QCheckBox(self.frame_18)
        self.checkBox.setGeometry(QtCore.QRect(170, 300, 261, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.checkBox.setFont(font)
        self.checkBox.setChecked(True)
        self.checkBox.setObjectName("checkBox")
        self.pushButton_6 = QtWidgets.QPushButton(self.frame_18)
        self.pushButton_6.setGeometry(QtCore.QRect(230, 370, 161, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_6.setStyleSheet("background-color: rgb(0, 193, 0);\n"
"\n"
"border-radius:5px")
        self.pushButton_6.setCheckable(False)
        self.pushButton_6.setChecked(False)
        self.pushButton_6.setObjectName("pushButton_6")
        self.label_18.raise_()
        self.label_20.raise_()
        self.label_19.raise_()
        self.label_22.raise_()
        self.label_17.raise_()
        self.checkBox.raise_()
        self.pushButton_6.raise_()
        self.lineEdit_9.raise_()
        self.lineEdit_7.raise_()
        self.pushButton_7.raise_()
        self.pushButton_8.raise_()
        self.verticalLayout_4.addWidget(self.frame_18)
        self.frame_19 = QtWidgets.QFrame(self.frame_15)
        self.frame_19.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_19.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_19.setObjectName("frame_19")
        self.verticalLayout_4.addWidget(self.frame_19)
        self.horizontalLayout_9.addWidget(self.frame_15)
        self.frame_16 = QtWidgets.QFrame(self.page_4)
        self.frame_16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_16.setObjectName("frame_16")
        self.horizontalLayout_9.addWidget(self.frame_16)
        self.stackedWidget_2.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.page_5)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setSpacing(0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.frame_20 = QtWidgets.QFrame(self.page_5)
        self.frame_20.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_20.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_20.setObjectName("frame_20")
        self.horizontalLayout_10.addWidget(self.frame_20)
        self.frame_22 = QtWidgets.QFrame(self.page_5)
        self.frame_22.setMinimumSize(QtCore.QSize(600, 0))
        self.frame_22.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_22.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_22.setObjectName("frame_22")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_22)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.frame_23 = QtWidgets.QFrame(self.frame_22)
        self.frame_23.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_23.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_23.setObjectName("frame_23")
        self.verticalLayout_5.addWidget(self.frame_23, 0, QtCore.Qt.AlignTop)
        self.frame_24 = QtWidgets.QFrame(self.frame_22)
        self.frame_24.setMinimumSize(QtCore.QSize(0, 505))
        self.frame_24.setMaximumSize(QtCore.QSize(580, 505))
        self.frame_24.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_24.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_24.setObjectName("frame_24")
        self.lineEdit_10 = QtWidgets.QLineEdit(self.frame_24)
        self.lineEdit_10.setGeometry(QtCore.QRect(290, 230, 271, 31))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.lineEdit_10.setFont(font)
        self.lineEdit_10.setStyleSheet("color: rgb(168, 168, 168);\n"
"border-bottom: 2px solid rgb(168, 168, 168);\n"
"border-radius:0px;\n"
"padding-left:5px\n"
"")
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.label_24 = QtWidgets.QLabel(self.frame_24)
        self.label_24.setGeometry(QtCore.QRect(0, 40, 581, 101))
        self.label_24.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(11)
        self.label_24.setFont(font)
        self.label_24.setStyleSheet("color: rgb(168, 168, 168);\n"
"padding:7px\n"
"\n"
"")
        self.label_24.setTextFormat(QtCore.Qt.RichText)
        self.label_24.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignTop)
        self.label_24.setWordWrap(True)
        self.label_24.setObjectName("label_24")
        self.pushButton_11 = QtWidgets.QPushButton(self.frame_24)
        self.pushButton_11.setGeometry(QtCore.QRect(190, 390, 161, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.pushButton_11.setFont(font)
        self.pushButton_11.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_11.setStyleSheet("background-color: rgb(0, 193, 0);\n"
"\n"
"border-radius:5px")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-upload-64 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_11.setIcon(icon4)
        self.pushButton_11.setIconSize(QtCore.QSize(26, 26))
        self.pushButton_11.setCheckable(False)
        self.pushButton_11.setChecked(False)
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_10 = QtWidgets.QPushButton(self.frame_24)
        self.pushButton_10.setGeometry(QtCore.QRect(60, 230, 181, 31))
        self.pushButton_10.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_10.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:5px;\n"
"")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("../../../Downloads/icons8-pdf-100.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_10.setIcon(icon5)
        self.pushButton_10.setIconSize(QtCore.QSize(26, 28))
        self.pushButton_10.setObjectName("pushButton_10")
        self.label_4 = QtWidgets.QLabel(self.frame_24)
        self.label_4.setGeometry(QtCore.QRect(250, 280, 100, 100))
        self.label_4.setText("")
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.label_23 = QtWidgets.QLabel(self.frame_24)
        self.label_23.setGeometry(QtCore.QRect(-30, -20, 701, 71))
        self.label_23.setMinimumSize(QtCore.QSize(351, 51))
        self.label_23.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(18)
        self.label_23.setFont(font)
        self.label_23.setStyleSheet("color: rgb(168, 168, 168);")
        self.label_23.setAlignment(QtCore.Qt.AlignCenter)
        self.label_23.setObjectName("label_23")
        self.verticalLayout_5.addWidget(self.frame_24)
        self.frame_25 = QtWidgets.QFrame(self.frame_22)
        self.frame_25.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_25.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_25.setObjectName("frame_25")
        self.verticalLayout_5.addWidget(self.frame_25)
        self.horizontalLayout_10.addWidget(self.frame_22)
        self.frame_21 = QtWidgets.QFrame(self.page_5)
        self.frame_21.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_21.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_21.setObjectName("frame_21")
        self.horizontalLayout_10.addWidget(self.frame_21)
        self.stackedWidget_2.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.page_6)
        self.horizontalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_11.setSpacing(0)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.frame_28 = QtWidgets.QFrame(self.page_6)
        self.frame_28.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_28.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_28.setObjectName("frame_28")
        self.horizontalLayout_11.addWidget(self.frame_28)
        self.frame_26 = QtWidgets.QFrame(self.page_6)
        self.frame_26.setMinimumSize(QtCore.QSize(621, 0))
        self.frame_26.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_26.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_26.setObjectName("frame_26")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame_26)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.frame_29 = QtWidgets.QFrame(self.frame_26)
        self.frame_29.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_29.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_29.setObjectName("frame_29")
        self.verticalLayout_6.addWidget(self.frame_29, 0, QtCore.Qt.AlignTop)
        self.frame_30 = QtWidgets.QFrame(self.frame_26)
        self.frame_30.setMinimumSize(QtCore.QSize(0, 508))
        self.frame_30.setMaximumSize(QtCore.QSize(619, 508))
        self.frame_30.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_30.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_30.setObjectName("frame_30")
        self.label_26 = QtWidgets.QLabel(self.frame_30)
        self.label_26.setGeometry(QtCore.QRect(50, 200, 481, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_26.setFont(font)
        self.label_26.setStyleSheet("color: rgb(168, 168, 168);")
        self.label_26.setText("")
        self.label_26.setObjectName("label_26")
        self.pushButton_12 = QtWidgets.QPushButton(self.frame_30)
        self.pushButton_12.setGeometry(QtCore.QRect(220, 380, 161, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.pushButton_12.setFont(font)
        self.pushButton_12.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_12.setStyleSheet("background-color: rgb(0, 193, 0);\n"
"\n"
"border-radius:5px")
        self.pushButton_12.setObjectName("pushButton_12")
        self.label_21 = QtWidgets.QLabel(self.frame_30)
        self.label_21.setGeometry(QtCore.QRect(120, 90, 341, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_21.setFont(font)
        self.label_21.setStyleSheet("color: rgb(168, 168, 168);")
        self.label_21.setObjectName("label_21")
        self.progressBar = QtWidgets.QProgressBar(self.frame_30)
        self.progressBar.setGeometry(QtCore.QRect(40, 260, 501, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.progressBar.setFont(font)
        self.progressBar.setStyleSheet("QProgressBar {\n"
"        border-radius: 5px;\n"
"        background-color: white;\n"
"        height: 20px;\n"
"        text-align: center;\n"
"    }\n"
"\n"
"    QProgressBar::chunk {\n"
"        background-color: blue;\n"
"        border-radius: 5px;\n"
"    }\n"
"")
        self.progressBar.setProperty("value", 24)
        self.progressBar.setAlignment(QtCore.Qt.AlignCenter)
        self.progressBar.setObjectName("progressBar")
        self.label_25 = QtWidgets.QLabel(self.frame_30)
        self.label_25.setGeometry(QtCore.QRect(0, 0, 621, 61))
        self.label_25.setMinimumSize(QtCore.QSize(351, 51))
        self.label_25.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(18)
        self.label_25.setFont(font)
        self.label_25.setStyleSheet("color: rgb(168, 168, 168);")
        self.label_25.setAlignment(QtCore.Qt.AlignCenter)
        self.label_25.setObjectName("label_25")
        self.verticalLayout_6.addWidget(self.frame_30)
        self.frame_31 = QtWidgets.QFrame(self.frame_26)
        self.frame_31.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_31.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_31.setObjectName("frame_31")
        self.verticalLayout_6.addWidget(self.frame_31)
        self.horizontalLayout_11.addWidget(self.frame_26)
        self.frame_27 = QtWidgets.QFrame(self.page_6)
        self.frame_27.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_27.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_27.setObjectName("frame_27")
        self.horizontalLayout_11.addWidget(self.frame_27)
        self.stackedWidget_2.addWidget(self.page_6)
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.label_30 = QtWidgets.QLabel(self.page_7)
        self.label_30.setGeometry(QtCore.QRect(30, 190, 281, 16))
        self.label_30.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(9)
        self.label_30.setFont(font)
        self.label_30.setStyleSheet("color: rgb(0, 193, 0);\n"
"")
        self.label_30.setText("")
        self.label_30.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_30.setObjectName("label_30")
        self.stackedWidget_2.addWidget(self.page_7)
        self.verticalLayout.addWidget(self.stackedWidget_2)
        self.horizontalLayout_4.addWidget(self.frame_4)
        self.stackedWidget.addWidget(self.SignupPage)
        self.ResetPassword = QtWidgets.QWidget()
        self.ResetPassword.setObjectName("ResetPassword")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.ResetPassword)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.frame_6 = QtWidgets.QFrame(self.ResetPassword)
        self.frame_6.setMaximumSize(QtCore.QSize(250, 16777215))
        self.frame_6.setStyleSheet("background-image: url(:/images/images/lock.jpg);")
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.horizontalLayout_6.addWidget(self.frame_6)
        self.frame_7 = QtWidgets.QFrame(self.ResetPassword)
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.frame_7)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.frame_33 = QtWidgets.QFrame(self.frame_7)
        self.frame_33.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_33.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_33.setObjectName("frame_33")
        self.horizontalLayout_12.addWidget(self.frame_33)
        self.frame_32 = QtWidgets.QFrame(self.frame_7)
        self.frame_32.setMinimumSize(QtCore.QSize(600, 0))
        self.frame_32.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_32.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_32.setObjectName("frame_32")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.frame_32)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frame_35 = QtWidgets.QFrame(self.frame_32)
        self.frame_35.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_35.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_35.setObjectName("frame_35")
        self.verticalLayout_7.addWidget(self.frame_35)
        self.frame_36 = QtWidgets.QFrame(self.frame_32)
        self.frame_36.setMinimumSize(QtCore.QSize(580, 500))
        self.frame_36.setMaximumSize(QtCore.QSize(580, 500))
        self.frame_36.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_36.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_36.setObjectName("frame_36")
        self.label_31 = QtWidgets.QLabel(self.frame_36)
        self.label_31.setGeometry(QtCore.QRect(340, 200, 271, 31))
        self.label_31.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_31.setFont(font)
        self.label_31.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_31.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_31.setObjectName("label_31")
        self.pushButton_16 = QtWidgets.QPushButton(self.frame_36)
        self.pushButton_16.setGeometry(QtCore.QRect(240, 430, 101, 41))
        self.pushButton_16.setMinimumSize(QtCore.QSize(100, 41))
        self.pushButton_16.setMaximumSize(QtCore.QSize(205, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.pushButton_16.setFont(font)
        self.pushButton_16.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_16.setStyleSheet("background-color: rgb(12, 39, 189);\n"
"border-radius:5px")
        self.pushButton_16.setObjectName("pushButton_16")
        self.pushButton_13 = QtWidgets.QPushButton(self.frame_36)
        self.pushButton_13.setGeometry(QtCore.QRect(530, 230, 41, 31))
        self.pushButton_13.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_13.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-left: 1px solid rgb(33, 43, 51);\n"
"border-radius:4px;\n"
"border-top-left-radius: 0px;\n"
"border-bottom-left-radius: 0px;\n"
"\n"
"\n"
"")
        self.pushButton_13.setText("")
        self.pushButton_13.setIcon(icon1)
        self.pushButton_13.setIconSize(QtCore.QSize(22, 22))
        self.pushButton_13.setObjectName("pushButton_13")
        self.label_28 = QtWidgets.QLabel(self.frame_36)
        self.label_28.setGeometry(QtCore.QRect(10, 80, 271, 31))
        self.label_28.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_28.setFont(font)
        self.label_28.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_28.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_28.setObjectName("label_28")
        self.label_27 = QtWidgets.QLabel(self.frame_36)
        self.label_27.setGeometry(QtCore.QRect(340, 80, 351, 31))
        self.label_27.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_27.setFont(font)
        self.label_27.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_27.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_27.setObjectName("label_27")
        self.lineEdit_13 = QtWidgets.QLineEdit(self.frame_36)
        self.lineEdit_13.setGeometry(QtCore.QRect(340, 230, 231, 31))
        self.lineEdit_13.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:4px;\n"
"padding-left:5px\n"
"\n"
"")
        self.lineEdit_13.setText("")
        self.lineEdit_13.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.lineEdit_12 = QtWidgets.QLineEdit(self.frame_36)
        self.lineEdit_12.setGeometry(QtCore.QRect(10, 110, 241, 31))
        self.lineEdit_12.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:4px;\n"
"padding-left:5px\n"
"\n"
"")
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.pushButton_15 = QtWidgets.QPushButton(self.frame_36)
        self.pushButton_15.setGeometry(QtCore.QRect(200, 320, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.pushButton_15.setFont(font)
        self.pushButton_15.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_15.setStyleSheet("background-color: rgb(0, 193, 0);\n"
"\n"
"border-radius:5px")
        self.pushButton_15.setCheckable(False)
        self.pushButton_15.setChecked(False)
        self.pushButton_15.setObjectName("pushButton_15")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.frame_36)
        self.lineEdit_11.setGeometry(QtCore.QRect(340, 110, 231, 31))
        self.lineEdit_11.setStyleSheet("color: rgb(168, 168, 168);\n"
"border-bottom: 2px solid rgb(168, 168, 168);\n"
"border-radius:0px;\n"
"padding-left:5px\n"
"")
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.label_32 = QtWidgets.QLabel(self.frame_36)
        self.label_32.setGeometry(QtCore.QRect(10, 200, 271, 31))
        self.label_32.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_32.setFont(font)
        self.label_32.setStyleSheet("color: rgb(168, 168, 168);\n"
"\n"
"")
        self.label_32.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_32.setObjectName("label_32")
        self.label_29 = QtWidgets.QLabel(self.frame_36)
        self.label_29.setGeometry(QtCore.QRect(-10, -10, 601, 61))
        self.label_29.setMinimumSize(QtCore.QSize(351, 51))
        self.label_29.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(25)
        self.label_29.setFont(font)
        self.label_29.setStyleSheet("color: rgb(168, 168, 168);")
        self.label_29.setAlignment(QtCore.Qt.AlignCenter)
        self.label_29.setObjectName("label_29")
        self.lineEdit_14 = QtWidgets.QLineEdit(self.frame_36)
        self.lineEdit_14.setGeometry(QtCore.QRect(10, 230, 231, 31))
        self.lineEdit_14.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-radius:4px;\n"
"padding-left:5px\n"
"")
        self.lineEdit_14.setText("")
        self.lineEdit_14.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.pushButton_14 = QtWidgets.QPushButton(self.frame_36)
        self.pushButton_14.setGeometry(QtCore.QRect(210, 230, 41, 31))
        self.pushButton_14.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_14.setStyleSheet("color: rgb(168, 168, 168);\n"
"border: 1px solid rgb(168, 168, 168);\n"
"border-left: 1px solid rgb(33, 43, 51);\n"
"border-radius:4px;\n"
"border-top-left-radius: 0px;\n"
"border-bottom-left-radius: 0px;\n"
"\n"
"\n"
"")
        self.pushButton_14.setText("")
        self.pushButton_14.setIcon(icon1)
        self.pushButton_14.setIconSize(QtCore.QSize(22, 22))
        self.pushButton_14.setObjectName("pushButton_14")
        self.label_35 = QtWidgets.QLabel(self.frame_36)
        self.label_35.setGeometry(QtCore.QRect(10, 140, 251, 21))
        self.label_35.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        font.setItalic(True)
        self.label_35.setFont(font)
        self.label_35.setStyleSheet("color:rgb(255, 0, 0)\n"
"\n"
"")
        self.label_35.setText("")
        self.label_35.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_35.setObjectName("label_35")
        self.label_36 = QtWidgets.QLabel(self.frame_36)
        self.label_36.setGeometry(QtCore.QRect(10, 260, 301, 16))
        self.label_36.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        font.setKerning(True)
        self.label_36.setFont(font)
        self.label_36.setStyleSheet("color: rgb(255, 0, 4);\n"
"")
        self.label_36.setText("")
        self.label_36.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_36.setObjectName("label_36")
        self.label_37 = QtWidgets.QLabel(self.frame_36)
        self.label_37.setGeometry(QtCore.QRect(340, 260, 231, 16))
        self.label_37.setSizeIncrement(QtCore.QSize(0, 1))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        font.setKerning(True)
        self.label_37.setFont(font)
        self.label_37.setStyleSheet("color: rgb(255, 0, 4);\n"
"")
        self.label_37.setText("")
        self.label_37.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_37.setObjectName("label_37")
        self.label_31.raise_()
        self.pushButton_16.raise_()
        self.label_28.raise_()
        self.label_27.raise_()
        self.pushButton_15.raise_()
        self.lineEdit_11.raise_()
        self.label_32.raise_()
        self.label_29.raise_()
        self.label_35.raise_()
        self.lineEdit_12.raise_()
        self.label_36.raise_()
        self.lineEdit_14.raise_()
        self.pushButton_14.raise_()
        self.label_37.raise_()
        self.lineEdit_13.raise_()
        self.pushButton_13.raise_()
        self.verticalLayout_7.addWidget(self.frame_36)
        self.frame_37 = QtWidgets.QFrame(self.frame_32)
        self.frame_37.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_37.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_37.setObjectName("frame_37")
        self.verticalLayout_7.addWidget(self.frame_37)
        self.horizontalLayout_12.addWidget(self.frame_32)
        self.frame_34 = QtWidgets.QFrame(self.frame_7)
        self.frame_34.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_34.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_34.setObjectName("frame_34")
        self.horizontalLayout_12.addWidget(self.frame_34)
        self.horizontalLayout_6.addWidget(self.frame_7)
        self.stackedWidget.addWidget(self.ResetPassword)
        self.Homepage = QtWidgets.QWidget()
        self.Homepage.setObjectName("Homepage")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.Homepage)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.frame_38 = QtWidgets.QFrame(self.Homepage)
        self.frame_38.setMinimumSize(QtCore.QSize(200, 554))
        self.frame_38.setMaximumSize(QtCore.QSize(200, 897987))
        self.frame_38.setStyleSheet("background-color: rgb(33, 53, 60);\n"
"color: rgb(212, 212, 212);\n"
"")
        self.frame_38.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_38.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_38.setObjectName("frame_38")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.frame_38)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.frame_40 = QtWidgets.QFrame(self.frame_38)
        self.frame_40.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_40.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_40.setObjectName("frame_40")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_40)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.frame_46 = QtWidgets.QFrame(self.frame_40)
        self.frame_46.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_46.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_46.setObjectName("frame_46")
        self.label_38 = QtWidgets.QLabel(self.frame_46)
        self.label_38.setGeometry(QtCore.QRect(50, -10, 121, 51))
        self.label_38.setMinimumSize(QtCore.QSize(121, 51))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_38.setFont(font)
        self.label_38.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_38.setObjectName("label_38")
        self.label_39 = QtWidgets.QLabel(self.frame_46)
        self.label_39.setGeometry(QtCore.QRect(0, -10, 47, 41))
        self.label_39.setText("")
        self.label_39.setPixmap(QtGui.QPixmap(":/icons/icons/icons8-analytics-90.png"))
        self.label_39.setScaledContents(True)
        self.label_39.setObjectName("label_39")
        self.verticalLayout_12.addWidget(self.frame_46)
        self.frame_48 = QtWidgets.QFrame(self.frame_40)
        self.frame_48.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_48.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_48.setObjectName("frame_48")
        self.verticalLayout_12.addWidget(self.frame_48)
        self.frame_47 = QtWidgets.QFrame(self.frame_40)
        self.frame_47.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_47.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_47.setObjectName("frame_47")
        self.verticalLayout_12.addWidget(self.frame_47)
        self.verticalLayout_8.addWidget(self.frame_40)
        self.frame_41 = QtWidgets.QFrame(self.frame_38)
        self.frame_41.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_41.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_41.setObjectName("frame_41")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.frame_41)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.pushButton_17 = QtWidgets.QPushButton(self.frame_41)
        self.pushButton_17.setMinimumSize(QtCore.QSize(171, 41))
        self.pushButton_17.setMaximumSize(QtCore.QSize(171, 41))
        self.pushButton_17.setStyleSheet("background-color:rgb(46, 75, 95);\n"
"border-radius: 5px;\n"
"color: rgb(212, 212, 212);")
        self.pushButton_17.setObjectName("pushButton_17")
        self.verticalLayout_9.addWidget(self.pushButton_17)
        self.pushButton_18 = QtWidgets.QPushButton(self.frame_41)
        self.pushButton_18.setMinimumSize(QtCore.QSize(171, 41))
        self.pushButton_18.setMaximumSize(QtCore.QSize(171, 41))
        self.pushButton_18.setStyleSheet("background-color:rgb(46, 75, 95);\n"
"border-radius: 5px;\n"
"color: rgb(212, 212, 212);")
        self.pushButton_18.setObjectName("pushButton_18")
        self.verticalLayout_9.addWidget(self.pushButton_18)
        self.pushButton_19 = QtWidgets.QPushButton(self.frame_41)
        self.pushButton_19.setMinimumSize(QtCore.QSize(171, 41))
        self.pushButton_19.setMaximumSize(QtCore.QSize(171, 41))
        self.pushButton_19.setStyleSheet("background-color:rgb(46, 75, 95);\n"
"border-radius: 5px;\n"
"color: rgb(212, 212, 212);")
        self.pushButton_19.setObjectName("pushButton_19")
        self.verticalLayout_9.addWidget(self.pushButton_19)
        self.verticalLayout_8.addWidget(self.frame_41, 0, QtCore.Qt.AlignVCenter)
        self.frame_42 = QtWidgets.QFrame(self.frame_38)
        self.frame_42.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_42.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_42.setObjectName("frame_42")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.frame_42)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.pushButton_20 = QtWidgets.QPushButton(self.frame_42)
        self.pushButton_20.setMinimumSize(QtCore.QSize(171, 41))
        self.pushButton_20.setMaximumSize(QtCore.QSize(171, 41))
        self.pushButton_20.setStyleSheet("background-color:rgb(255, 0, 4);\n"
"border-radius: 5px;\n"
"color: rgb(212, 212, 212);")
        self.pushButton_20.setObjectName("pushButton_20")
        self.verticalLayout_13.addWidget(self.pushButton_20, 0, QtCore.Qt.AlignBottom)
        self.verticalLayout_8.addWidget(self.frame_42)
        self.horizontalLayout_7.addWidget(self.frame_38)
        self.frame_39 = QtWidgets.QFrame(self.Homepage)
        self.frame_39.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_39.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_39.setObjectName("frame_39")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.frame_39)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.stackedWidget_3 = QtWidgets.QStackedWidget(self.frame_39)
        self.stackedWidget_3.setObjectName("stackedWidget_3")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.page)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.frame_43 = QtWidgets.QFrame(self.page)
        self.frame_43.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_43.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_43.setObjectName("frame_43")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.frame_43)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.frame_44 = QtWidgets.QFrame(self.frame_43)
        self.frame_44.setMaximumSize(QtCore.QSize(16777215, 150))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.frame_44.setFont(font)
        self.frame_44.setStyleSheet("background-color: rgb(33, 53, 60);\n"
"color: rgb(212, 212, 212);\n"
"")
        self.frame_44.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_44.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_44.setObjectName("frame_44")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.frame_44)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.label_40 = QtWidgets.QLabel(self.frame_44)
        self.label_40.setMinimumSize(QtCore.QSize(691, 71))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(19)
        font.setBold(True)
        font.setWeight(75)
        self.label_40.setFont(font)
        self.label_40.setAlignment(QtCore.Qt.AlignCenter)
        self.label_40.setObjectName("label_40")
        self.verticalLayout_14.addWidget(self.label_40)
        self.comboBox = QtWidgets.QComboBox(self.frame_44)
        self.comboBox.setMinimumSize(QtCore.QSize(201, 31))
        self.comboBox.setMaximumSize(QtCore.QSize(334, 31))
        self.comboBox.setStyleSheet("border-radius: 3px;\n"
"border: 1px solid white")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.setItemText(16, "")
        self.verticalLayout_14.addWidget(self.comboBox, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_11.addWidget(self.frame_44)
        self.frame_45 = QtWidgets.QFrame(self.frame_43)
        self.frame_45.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_45.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_45.setObjectName("frame_45")
        self.frame_49 = QtWidgets.QFrame(self.frame_45)
        self.frame_49.setGeometry(QtCore.QRect(0, 50, 120, 80))
        self.frame_49.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_49.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_49.setObjectName("frame_49")
        self.verticalLayout_11.addWidget(self.frame_45)
        self.verticalLayout_15.addWidget(self.frame_43)
        self.stackedWidget_3.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.frame_50 = QtWidgets.QFrame(self.page_2)
        self.frame_50.setMaximumSize(QtCore.QSize(16777215, 100))
        self.frame_50.setStyleSheet("background-color: rgb(33, 53, 60);\n"
"color: rgb(212, 212, 212);\n"
"")
        self.frame_50.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_50.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_50.setObjectName("frame_50")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.frame_50)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.label_41 = QtWidgets.QLabel(self.frame_50)
        self.label_41.setMinimumSize(QtCore.QSize(691, 71))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(19)
        font.setBold(True)
        font.setWeight(75)
        self.label_41.setFont(font)
        self.label_41.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_41.setAlignment(QtCore.Qt.AlignCenter)
        self.label_41.setObjectName("label_41")
        self.verticalLayout_17.addWidget(self.label_41)
        self.verticalLayout_16.addWidget(self.frame_50)
        self.frame_51 = QtWidgets.QFrame(self.page_2)
        self.frame_51.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_51.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_51.setObjectName("frame_51")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.frame_51)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.frame_52 = QtWidgets.QFrame(self.frame_51)
        self.frame_52.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_52.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_52.setObjectName("frame_52")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout(self.frame_52)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.frame_53 = QtWidgets.QFrame(self.frame_52)
        self.frame_53.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_53.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_53.setObjectName("frame_53")
        self.horizontalLayout_13.addWidget(self.frame_53)
        self.frame_54 = QtWidgets.QFrame(self.frame_52)
        self.frame_54.setMinimumSize(QtCore.QSize(400, 0))
        self.frame_54.setMaximumSize(QtCore.QSize(400, 388))
        self.frame_54.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_54.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_54.setObjectName("frame_54")
        self.pushButton_21 = QtWidgets.QPushButton(self.frame_54)
        self.pushButton_21.setGeometry(QtCore.QRect(130, 280, 171, 41))
        self.pushButton_21.setMinimumSize(QtCore.QSize(171, 41))
        self.pushButton_21.setMaximumSize(QtCore.QSize(171, 41))
        self.pushButton_21.setStyleSheet("background-color:rgb(39, 216, 19);\n"
"border-radius: 5px;\n"
"")
        self.pushButton_21.setObjectName("pushButton_21")
        self.dateEdit = QtWidgets.QDateEdit(self.frame_54)
        self.dateEdit.setGeometry(QtCore.QRect(20, 30, 151, 31))
        self.dateEdit.setStyleSheet("border-radius: 3px;\n"
"border: 1px solid white;\n"
"color: rgb(227, 227, 227);")
        self.dateEdit.setObjectName("dateEdit")
        self.dateEdit_2 = QtWidgets.QDateEdit(self.frame_54)
        self.dateEdit_2.setGeometry(QtCore.QRect(240, 30, 151, 31))
        self.dateEdit_2.setStyleSheet("border-radius: 3px;\n"
"border: 1px solid white;\n"
"color: rgb(227, 227, 227);")
        self.dateEdit_2.setObjectName("dateEdit_2")
        self.label_42 = QtWidgets.QLabel(self.frame_54)
        self.label_42.setGeometry(QtCore.QRect(20, 10, 101, 16))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(9)
        self.label_42.setFont(font)
        self.label_42.setStyleSheet("color: rgb(190, 190, 190);")
        self.label_42.setObjectName("label_42")
        self.label_43 = QtWidgets.QLabel(self.frame_54)
        self.label_43.setGeometry(QtCore.QRect(240, 10, 101, 16))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(9)
        self.label_43.setFont(font)
        self.label_43.setStyleSheet("color: rgb(190, 190, 190);")
        self.label_43.setObjectName("label_43")
        self.label_44 = QtWidgets.QLabel(self.frame_54)
        self.label_44.setGeometry(QtCore.QRect(180, 35, 51, 21))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(13)
        self.label_44.setFont(font)
        self.label_44.setStyleSheet("color: rgb(190, 190, 190);")
        self.label_44.setAlignment(QtCore.Qt.AlignCenter)
        self.label_44.setObjectName("label_44")
        self.label_45 = QtWidgets.QLabel(self.frame_54)
        self.label_45.setGeometry(QtCore.QRect(20, 110, 141, 51))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_45.setFont(font)
        self.label_45.setStyleSheet("color: rgb(218, 218, 218);")
        self.label_45.setObjectName("label_45")
        self.label_46 = QtWidgets.QLabel(self.frame_54)
        self.label_46.setGeometry(QtCore.QRect(20, 190, 151, 61))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_46.setFont(font)
        self.label_46.setStyleSheet("color: rgb(218, 218, 218);")
        self.label_46.setObjectName("label_46")
        self.lineEdit_15 = QtWidgets.QLineEdit(self.frame_54)
        self.lineEdit_15.setGeometry(QtCore.QRect(230, 120, 161, 31))
        self.lineEdit_15.setStyleSheet("color: rgb(218, 218, 218);\n"
"padding-left:3px;\n"
"border: 1px solid rgb(238, 238, 238);\n"
"border-radius:4px")
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.lineEdit_16 = QtWidgets.QLineEdit(self.frame_54)
        self.lineEdit_16.setGeometry(QtCore.QRect(230, 200, 161, 31))
        self.lineEdit_16.setStyleSheet("color: rgb(218, 218, 218);\n"
"padding-left:3px;\n"
"border: 1px solid rgb(238, 238, 238);\n"
"border-radius:4px")
        self.lineEdit_16.setObjectName("lineEdit_16")
        self.pushButton_22 = QtWidgets.QPushButton(self.frame_54)
        self.pushButton_22.setGeometry(QtCore.QRect(170, 360, 111, 23))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        self.pushButton_22.setFont(font)
        self.pushButton_22.setStyleSheet("color: rgb(185, 185, 185);\n"
"background-color: transparent\n"
"")
        self.pushButton_22.setObjectName("pushButton_22")
        self.horizontalLayout_13.addWidget(self.frame_54)
        self.frame_55 = QtWidgets.QFrame(self.frame_52)
        self.frame_55.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_55.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_55.setObjectName("frame_55")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.frame_55)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.horizontalLayout_13.addWidget(self.frame_55)
        self.verticalLayout_18.addWidget(self.frame_52)
        self.verticalLayout_16.addWidget(self.frame_51)
        self.stackedWidget_3.addWidget(self.page_2)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.page_8)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.frame_56 = QtWidgets.QFrame(self.page_8)
        self.frame_56.setMaximumSize(QtCore.QSize(16777215, 100))
        self.frame_56.setStyleSheet("background-color: rgb(33, 53, 60);\n"
"color: rgb(212, 212, 212);\n"
"")
        self.frame_56.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_56.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_56.setObjectName("frame_56")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.frame_56)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.label_47 = QtWidgets.QLabel(self.frame_56)
        self.label_47.setMinimumSize(QtCore.QSize(691, 71))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(19)
        font.setBold(True)
        font.setWeight(75)
        self.label_47.setFont(font)
        self.label_47.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_47.setAlignment(QtCore.Qt.AlignCenter)
        self.label_47.setObjectName("label_47")
        self.verticalLayout_20.addWidget(self.label_47)
        self.verticalLayout_21.addWidget(self.frame_56)
        self.frame_57 = QtWidgets.QFrame(self.page_8)
        self.frame_57.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_57.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_57.setObjectName("frame_57")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout(self.frame_57)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.frame_58 = QtWidgets.QFrame(self.frame_57)
        self.frame_58.setMinimumSize(QtCore.QSize(100, 0))
        self.frame_58.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_58.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_58.setObjectName("frame_58")
        self.horizontalLayout_14.addWidget(self.frame_58)
        self.frame_59 = QtWidgets.QFrame(self.frame_57)
        self.frame_59.setMinimumSize(QtCore.QSize(450, 0))
        self.frame_59.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_59.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_59.setObjectName("frame_59")
        self.verticalLayout_26 = QtWidgets.QVBoxLayout(self.frame_59)
        self.verticalLayout_26.setObjectName("verticalLayout_26")
        self.frame_65 = QtWidgets.QFrame(self.frame_59)
        self.frame_65.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_65.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_65.setObjectName("frame_65")
        self.label_51 = QtWidgets.QLabel(self.frame_65)
        self.label_51.setGeometry(QtCore.QRect(120, 0, 249, 20))
        self.label_51.setMinimumSize(QtCore.QSize(10, 2))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_51.setFont(font)
        self.label_51.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_51.setAlignment(QtCore.Qt.AlignCenter)
        self.label_51.setObjectName("label_51")
        self.lineEdit_18 = QtWidgets.QLineEdit(self.frame_65)
        self.lineEdit_18.setGeometry(QtCore.QRect(100, 50, 291, 31))
        self.lineEdit_18.setStyleSheet("color: rgb(218, 218, 218);\n"
"padding-left:3px;\n"
"border: 1px solid rgb(238, 238, 238);\n"
"border-radius:4px")
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.pushButton_25 = QtWidgets.QPushButton(self.frame_65)
        self.pushButton_25.setGeometry(QtCore.QRect(100, 100, 101, 31))
        self.pushButton_25.setMinimumSize(QtCore.QSize(84, 19))
        self.pushButton_25.setMaximumSize(QtCore.QSize(171, 41))
        self.pushButton_25.setStyleSheet("background-color:rgb(255, 0, 4);\n"
"border-radius: 5px;\n"
"color: rgb(212, 212, 212);")
        self.pushButton_25.setObjectName("pushButton_25")
        self.pushButton_26 = QtWidgets.QPushButton(self.frame_65)
        self.pushButton_26.setGeometry(QtCore.QRect(280, 100, 111, 31))
        self.pushButton_26.setMinimumSize(QtCore.QSize(84, 19))
        self.pushButton_26.setMaximumSize(QtCore.QSize(171, 41))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_26.setFont(font)
        self.pushButton_26.setStyleSheet("background-color:rgb(16, 208, 6);\n"
"border-radius: 5px;\n"
"color: rgb(0, 0, 0)")
        self.pushButton_26.setObjectName("pushButton_26")
        self.verticalLayout_26.addWidget(self.frame_65)
        self.tableWidget = QtWidgets.QTableWidget(self.frame_59)
        self.tableWidget.setMinimumSize(QtCore.QSize(500, 0))
        self.tableWidget.setMaximumSize(QtCore.QSize(650, 235))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("background-color: rgb(166, 166, 166);")
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.tableWidget.setRowCount(10)
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setObjectName("tableWidget")
        self.verticalLayout_26.addWidget(self.tableWidget)
        self.horizontalLayout_14.addWidget(self.frame_59)
        self.frame_60 = QtWidgets.QFrame(self.frame_57)
        self.frame_60.setMinimumSize(QtCore.QSize(100, 0))
        self.frame_60.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_60.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_60.setObjectName("frame_60")
        self.horizontalLayout_14.addWidget(self.frame_60)
        self.verticalLayout_21.addWidget(self.frame_57)
        self.stackedWidget_3.addWidget(self.page_8)
        self.page_9 = QtWidgets.QWidget()
        self.page_9.setObjectName("page_9")
        self.stackedWidget_3.addWidget(self.page_9)
        self.page_10 = QtWidgets.QWidget()
        self.page_10.setObjectName("page_10")
        self.verticalLayout_23 = QtWidgets.QVBoxLayout(self.page_10)
        self.verticalLayout_23.setObjectName("verticalLayout_23")
        self.frame_61 = QtWidgets.QFrame(self.page_10)
        self.frame_61.setMaximumSize(QtCore.QSize(16777215, 100))
        self.frame_61.setStyleSheet("background-color: rgb(33, 53, 60);\n"
"color: rgb(212, 212, 212);\n"
"")
        self.frame_61.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_61.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_61.setObjectName("frame_61")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout(self.frame_61)
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.label_48 = QtWidgets.QLabel(self.frame_61)
        self.label_48.setMinimumSize(QtCore.QSize(691, 71))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(19)
        font.setBold(True)
        font.setWeight(75)
        self.label_48.setFont(font)
        self.label_48.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_48.setAlignment(QtCore.Qt.AlignCenter)
        self.label_48.setObjectName("label_48")
        self.verticalLayout_22.addWidget(self.label_48)
        self.verticalLayout_23.addWidget(self.frame_61)
        self.frame_62 = QtWidgets.QFrame(self.page_10)
        self.frame_62.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_62.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_62.setObjectName("frame_62")
        self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.frame_62)
        self.verticalLayout_24.setObjectName("verticalLayout_24")
        self.frame_63 = QtWidgets.QFrame(self.frame_62)
        self.frame_63.setMaximumSize(QtCore.QSize(16777215, 119))
        self.frame_63.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_63.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_63.setObjectName("frame_63")
        self.splitter = QtWidgets.QSplitter(self.frame_63)
        self.splitter.setGeometry(QtCore.QRect(280, 10, 161, 56))
        self.splitter.setMinimumSize(QtCore.QSize(161, 56))
        self.splitter.setMaximumSize(QtCore.QSize(161, 56))
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.label_49 = QtWidgets.QLabel(self.splitter)
        self.label_49.setMinimumSize(QtCore.QSize(161, 20))
        self.label_49.setMaximumSize(QtCore.QSize(161, 20))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(11)
        self.label_49.setFont(font)
        self.label_49.setStyleSheet("color: rgb(190, 190, 190);")
        self.label_49.setObjectName("label_49")
        self.dateEdit_3 = QtWidgets.QDateEdit(self.splitter)
        self.dateEdit_3.setMinimumSize(QtCore.QSize(151, 31))
        self.dateEdit_3.setMaximumSize(QtCore.QSize(151, 31))
        self.dateEdit_3.setStyleSheet("border-radius: 3px;\n"
"border: 1px solid white;\n"
"color: rgb(227, 227, 227);")
        self.dateEdit_3.setObjectName("dateEdit_3")
        self.pushButton_27 = QtWidgets.QPushButton(self.frame_63)
        self.pushButton_27.setGeometry(QtCore.QRect(300, 80, 111, 31))
        self.pushButton_27.setMinimumSize(QtCore.QSize(111, 31))
        self.pushButton_27.setMaximumSize(QtCore.QSize(111, 31))
        font = QtGui.QFont()
        font.setFamily("Nova Flat")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_27.setFont(font)
        self.pushButton_27.setStyleSheet("background-color:rgb(16, 208, 6);\n"
"border-radius: 5px;\n"
"color: rgb(0, 0, 0)")
        self.pushButton_27.setObjectName("pushButton_27")
        self.verticalLayout_24.addWidget(self.frame_63)
        self.frame_64 = QtWidgets.QFrame(self.frame_62)
        self.frame_64.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_64.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_64.setObjectName("frame_64")
        self.verticalLayout_24.addWidget(self.frame_64)
        self.verticalLayout_23.addWidget(self.frame_62)
        self.stackedWidget_3.addWidget(self.page_10)
        self.verticalLayout_10.addWidget(self.stackedWidget_3)
        self.horizontalLayout_7.addWidget(self.frame_39)
        self.stackedWidget.addWidget(self.Homepage)
        self.horizontalLayout.addWidget(self.stackedWidget)

        self.retranslateUi(Form)
        self.stackedWidget.setCurrentIndex(0)
        self.stackedWidget_2.setCurrentIndex(0)
        self.stackedWidget_3.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "M-Tracker"))
        self.label.setText(_translate("Form", "Log in"))
        self.label_2.setText(_translate("Form", "Username"))
        self.label_3.setText(_translate("Form", "Password"))
        self.pushButton.setText(_translate("Form", "Log in"))
        self.pushButton.setShortcut(_translate("Form", "Return"))
        self.pushButton_2.setText(_translate("Form", "New user? Sign up"))
        self.pushButton_3.setText(_translate("Form", "Forgot passord?"))
        self.label_12.setText(_translate("Form", "PERSONAL DETAILS"))
        self.label_13.setText(_translate("Form", "PASSWORD SETUP"))
        self.label_14.setText(_translate("Form", "UPLOAD STATEMENTS"))
        self.pushButton_5.setText(_translate("Form", "Back to Log in"))
        self.label_7.setText(_translate("Form", "Verification code*"))
        self.label_16.setText(_translate("Form", "PERSONAL DETAILS"))
        self.label_8.setText(_translate("Form", "Email address*"))
        self.label_5.setText(_translate("Form", "First name*"))
        self.label_10.setText(_translate("Form", "Gender*"))
        self.label_6.setText(_translate("Form", "Last name*"))
        self.label_15.setText(_translate("Form", "254"))
        self.label_9.setText(_translate("Form", "Phone number*"))
        self.pushButton_4.setText(_translate("Form", "Next"))
        self.pushButton_4.setShortcut(_translate("Form", "Return"))
        self.label_18.setText(_translate("Form", "Repeat password"))
        self.label_19.setText(_translate("Form", "Password setup"))
        self.label_17.setText(_translate("Form", "Enter password"))
        self.checkBox.setText(_translate("Form", "I agree to M-Tracker\'s Terms and conditions"))
        self.pushButton_6.setText(_translate("Form", "Next"))
        self.pushButton_6.setShortcut(_translate("Form", "Return"))
        self.lineEdit_10.setPlaceholderText(_translate("Form", "Statement\'s Password"))
        self.label_24.setText(_translate("Form", "As part of our registration process, we kindly request that you upload your M-Pesa statements sent by Safaricom and provide its password. We assure you that we take data security very seriously, and your information will be kept strictly confidential. We do not share any data with third parties."))
        self.pushButton_11.setText(_translate("Form", "Upload"))
        self.pushButton_11.setShortcut(_translate("Form", "Return"))
        self.pushButton_10.setText(_translate("Form", "Select M-Pesa Statement"))
        self.label_23.setText(_translate("Form", "Upload M-Pesa Statements"))
        self.pushButton_12.setText(_translate("Form", "Finish Sign Up"))
        self.pushButton_12.setShortcut(_translate("Form", "Return"))
        self.label_21.setText(_translate("Form", "Please note that this registration step may take some time."))
        self.label_25.setText(_translate("Form", "Processing Mpesa statements"))
        self.label_31.setText(_translate("Form", "Repeat password"))
        self.pushButton_16.setText(_translate("Form", "Back to Log in"))
        self.label_28.setText(_translate("Form", "Email address*"))
        self.label_27.setText(_translate("Form", "Verification code*"))
        self.pushButton_15.setText(_translate("Form", "Reset Password"))
        self.pushButton_15.setShortcut(_translate("Form", "Return"))
        self.label_32.setText(_translate("Form", "Enter new password"))
        self.label_29.setText(_translate("Form", "Reset Password"))
        self.label_38.setText(_translate("Form", "M-TRACKER"))
        self.pushButton_17.setText(_translate("Form", "View Transactions"))
        self.pushButton_18.setText(_translate("Form", "Set Buget"))
        self.pushButton_19.setText(_translate("Form", "Predict"))
        self.pushButton_20.setText(_translate("Form", "Logout"))
        self.label_40.setText(_translate("Form", "VIEW TRANSACTIONS"))
        self.comboBox.setItemText(0, _translate("Form", "Daily Balance Average"))
        self.comboBox.setItemText(1, _translate("Form", "Daily Spend Average"))
        self.comboBox.setItemText(2, _translate("Form", "Top 10 spenders"))
        self.comboBox.setItemText(3, _translate("Form", "Top 10 Incomes"))
        self.comboBox.setItemText(4, _translate("Form", "Top 10  Transaction types (Amount)"))
        self.comboBox.setItemText(5, _translate("Form", "Top 10  Transaction types (Frequency)"))
        self.comboBox.setItemText(6, _translate("Form", "Top 10  Most Transacted With Parties (Amount)"))
        self.comboBox.setItemText(7, _translate("Form", "Top 10  Most Transacted With Parties (Frequency)"))
        self.comboBox.setItemText(8, _translate("Form", "Money in vs Money (Amount)"))
        self.comboBox.setItemText(9, _translate("Form", "Money in vs Money (Frequency)"))
        self.comboBox.setItemText(10, _translate("Form", "Least 10 Spenders"))
        self.comboBox.setItemText(11, _translate("Form", "Least 10 Incomes"))
        self.comboBox.setItemText(12, _translate("Form", "Leat 10 Transaction Types (Amount)"))
        self.comboBox.setItemText(13, _translate("Form", "Least 10 Transaction Types (Frequency)"))
        self.comboBox.setItemText(14, _translate("Form", "Leat 10  Most Transacted With Parties (Amount)"))
        self.comboBox.setItemText(15, _translate("Form", "Top 10  Most Transacted With Parties (Frequency)"))
        self.label_41.setText(_translate("Form", "SET BUDGET"))
        self.pushButton_21.setText(_translate("Form", "Set Budget"))
        self.dateEdit.setDisplayFormat(_translate("Form", "yyyy MMMM dd"))
        self.dateEdit_2.setDisplayFormat(_translate("Form", "yyyy MMMM dd"))
        self.label_42.setText(_translate("Form", "Start Date"))
        self.label_43.setText(_translate("Form", "End Date"))
        self.label_44.setText(_translate("Form", "TO"))
        self.label_45.setText(_translate("Form", "Average daily \n"
"expenditure budget"))
        self.label_46.setText(_translate("Form", "Whole duration \n"
"expenditure budget"))
        self.pushButton_22.setText(_translate("Form", "View set budgets"))
        self.label_47.setText(_translate("Form", "VIEW BUDGETS"))
        self.label_51.setText(_translate("Form", "Mark a budget as complete"))
        self.lineEdit_18.setPlaceholderText(_translate("Form", "Enter Budget ID"))
        self.pushButton_25.setText(_translate("Form", "Failed"))
        self.pushButton_26.setText(_translate("Form", "Success"))
        self.label_48.setText(_translate("Form", "PREDICT SPEND"))
        self.label_49.setText(_translate("Form", "Select Date to predict"))
        self.dateEdit_3.setDisplayFormat(_translate("Form", "yyyy MMMM dd"))
        self.pushButton_27.setText(_translate("Form", "Predict"))


        ## My code

        self.db = mysql.connector.connect(
            host='localhost',
            password='root',
            user='root'
        )

        self.mycursor = self.db.cursor()

        self.pushButton_2.clicked.connect(self.pushButton_2_clicked)
        self.pushButton_5.clicked.connect(self.pushButton_5_clicked)
        self.pushButton_3.clicked.connect(self.pushButton_3_clicked)
        self.pushButton_16.clicked.connect(self.pushButton_5_clicked)
        self.signuppass_state = True
        self.reset_new_pass = True
        self.reset_confirm_pass = True
        self.set_password = True
        self.repeat_set_password = True
        self.pushButton_9.clicked.connect(lambda x: self.showpass(self.lineEdit_2, 0))
        self.pushButton_14.clicked.connect(lambda x: self.showpass(self.lineEdit_14, 1))
        self.pushButton_13.clicked.connect(lambda x: self.showpass(self.lineEdit_13, 2))
        self.pushButton_8.clicked.connect(lambda x: self.showpass(self.lineEdit_7, 4))
        self.pushButton_7.clicked.connect(lambda x: self.showpass(self.lineEdit_9, 3))
        self.pushButton_4.clicked.connect(self.pushButton_4_clicked)
        self.lineEdit_5.editingFinished.connect(self.lineEdit_5_edited)
        self.otp = "vgsv"
        self.signup_details = []
        self.checkBox.stateChanged.connect(self.sign_up_checkbox)
        self.pushButton_6.clicked.connect(self.pushButton_6_clicked)
        self.lineEdit_7.editingFinished.connect(self.lineEdit_7_edited)
        self.signup_pass = "None"

        self.pushButton_10.clicked.connect(self.pushButton_10_clicked)
        self.file_path_selected = False
        self.pushButton_11.clicked.connect(self.pushButton_11_clicked)
        self.pushButton_12.clicked.connect(self.pushButton_12_clicked)
        self.pushButton.clicked.connect(self.pushButton_clicked)
        self.percentage_bar_chart_cont = QGridLayout(self.frame_45)
        self.percentage_bar_chart_cont.setObjectName(u"percentage_bar_chart_cont")
        self.comboBox.activated.connect(self.display_chart)
        self.pushButton_20.clicked.connect(self.pushButton_20_clicked)
        self.pushButton_17.clicked.connect(self.pushButton_17_clicked)
        self.pushButton_18.clicked.connect(self.pushButton_18_clicked)
        self.pushButton_19.clicked.connect(self.pushButton_19_clicked)
        self.pushButton_22.clicked.connect(self.pushButton_22_clicked)
        self.pushButton_21.clicked.connect(self.pushButton_21_clicked)
        self.dateEdit.setDate(QtCore.QDate.currentDate())
        self.dateEdit_2.setDate(QtCore.QDate.currentDate())
        self.pushButton_25.clicked.connect(self.pushButton_25_clicked)
        self.pushButton_26.clicked.connect(self.pushButton_26_clicked)
        self.prediction = QGridLayout(self.frame_64)
        self.prediction.setObjectName(u"prediction")
        self.dateEdit_3.setDate(QtCore.QDate.currentDate())
        self.pushButton_27.clicked.connect(self.pushButton_27_clicked)



    def pushButton_27_clicked(self):
        self.mycursor.execute('SELECT transaction_amount_model FROM mtracker.personal_details WHERE username = %s;',
                     (self.session_username,))

        data = [i for i  in self.mycursor][0][0]
        model = pickle.loads(data)
        date = pd.Timestamp(self.dateEdit_3.date().toString('yyyy-MM-dd'))
        prediction = model.predict([[date.month, date.day]])
        prediction = prediction[0]
        print(prediction)

        set0 = QtCharts.QBarSet("Amount")
        set0.append([prediction])

        series = QtCharts.QBarSeries()
        series.append(set0)

        chart = QtCharts.QChart()
        chart.addSeries(series)
        chart.setTitle(f'PREDICTION FOR AMOUNT SPENT ON {date}')
        chart.setAnimationOptions(QtCharts.QChart.SeriesAnimations)

        categories = [f'Spending on {date}']
        axis = QtCharts.QBarCategoryAxis()
        axis.append(categories)
        # axis.setLabelsAngle(270)
        chart.createDefaultAxes()
        chart.setAxisX(axis, series)

        chart.legend().setVisible(False)
        # chart.legend().setAlignment(Qt.AlignRight)

        self.chart_view = QtCharts.QChartView(chart)
        self.chart_view.setRenderHint(QPainter.Antialiasing)
        self.chart_view.chart().setTheme(QtCharts.QChart.ChartThemeDark)

        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.chart_view.sizePolicy().hasHeightForWidth())
        self.chart_view.setSizePolicy(sizePolicy)
        self.chart_view.setMinimumSize(QSize(0, 300))
        self.prediction.addWidget(self.chart_view, 0, 0, 9, 9)
        self.frame.setStyleSheet(u"background-color: transparent")

    def pushButton_26_clicked(self):
        id = self.lineEdit_18.text()
        try:
                self.mycursor.execute('SELECT status FROM mtracker.budgets where budget_id = %s', (id,))
                data = [i for i in self.mycursor][0][0]
                if data == 'ONGOING':
                        self.mycursor.execute('UPDATE mtracker.budgets SET status = "COMPLETED SUCCESSFULLY" '
                                              'WHERE budget_id = %s', (id,))
                        self.db.commit()

                        messagebox = QMessageBox()
                        messagebox.setWindowTitle("Updated")
                        messagebox.setIcon(QMessageBox.Information)
                        messagebox.setText("Budget updated successfully!")
                        x = messagebox.exec_()

                else:
                        messagebox = QMessageBox()
                        messagebox.setWindowTitle("Updated")
                        messagebox.setIcon(QMessageBox.Warning)
                        messagebox.setText("Budget already marked as completed!")
                        x = messagebox.exec_()

                self.pushButton_22_clicked()
        except:
                messagebox = QMessageBox()
                messagebox.setWindowTitle("Error")
                messagebox.setIcon(QMessageBox.Warning)
                messagebox.setText("Incorrect ID or record is \n"
                                   "already marked as complete!")
                x = messagebox.exec_()
    def pushButton_25_clicked(self):
        id = self.lineEdit_18.text()
        try:
                self.mycursor.execute('SELECT status FROM mtracker.budgets where budget_id = %s', (id,))
                data = [i for i in self.mycursor][0][0]
                if data == 'ONGOING':
                        self.mycursor.execute('UPDATE mtracker.budgets SET status = "FAILED" '
                                              'WHERE budget_id = %s', (id,))
                        self.db.commit()

                        messagebox = QMessageBox()
                        messagebox.setWindowTitle("Updated")
                        messagebox.setIcon(QMessageBox.Information)
                        messagebox.setText("Budget updated successfully!")
                        x = messagebox.exec_()
                else:
                        messagebox = QMessageBox()
                        messagebox.setWindowTitle("Updated")
                        messagebox.setIcon(QMessageBox.Warning)
                        messagebox.setText("Budget already marked as completed!")
                        x = messagebox.exec_()

                self.pushButton_22_clicked()
        except:
                messagebox = QMessageBox()
                messagebox.setWindowTitle("Error")
                messagebox.setIcon(QMessageBox.Warning)
                messagebox.setText("Incorrect ID or record is \n"
                                   "already marked as complete!")
                x = messagebox.exec_()
    def pushButton_21_clicked(self):
        daily = self.lineEdit_15.text()
        whole = self.lineEdit_16.text()
        start_date = self.dateEdit.date().toString('yyyy-MM-dd')
        end_date = self.dateEdit_2.date().toString('yyyy-MM-dd')

        if whole != '' and daily != "":
            try:
                self.mycursor.execute('INSERT INTO mtracker.budgets(username, start_date, end_date, '
                                      'average_daily_expenditure, whole_duration_expenditure, status)'
                                      ' VALUES(%s, %s,%s,%s,%s,%s)',
                                      (self.session_username, start_date, end_date, daily, whole, 'ONGOING'))
                self.db.commit()
                messagebox = QMessageBox()
                messagebox.setWindowTitle("Budget set")
                messagebox.setIcon(QMessageBox.Information)
                messagebox.setText("Budget has been set successfully!")
                x = messagebox.exec_()
                self.pushButton_22_clicked()
            except:
                messagebox = QMessageBox()
                messagebox.setWindowTitle("Incorrect input")
                messagebox.setIcon(QMessageBox.Warning)
                messagebox.setText("Fill in all the blanks correctly!")
                x = messagebox.exec_()
        else:
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Incorrect input")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("Fill in all the blanks!")
            x = messagebox.exec_()

    def pushButton_22_clicked(self):
        self.tableWidget.setColumnCount(6)
        header_labels = ['BUDGET ID', 'START DATE', 'END DATE', 'DAILY EXPENDITURE', 'WHOLE BUDGET EXPENDITURE',
                         'STATUS']
        self.tableWidget.setHorizontalHeaderLabels(header_labels)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.setRowCount(0)

        self.mycursor.execute(f"SELECT budget_id, start_date, end_date, average_daily_expenditure, "
                              f"whole_duration_expenditure, status FROM mtracker.budgets;")

        for row_number, row_data in enumerate(self.mycursor):
            self.tableWidget.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.tableWidget.setItem(row_number, column_number,
                                         QtWidgets.QTableWidgetItem(str(data)))

        self.tableWidget.setColumnWidth(4, 150)
        self.tableWidget.setColumnWidth(5, 200)
        self.stackedWidget_3.setCurrentWidget(self.page_8)

    def pushButton_19_clicked(self):
        self.stackedWidget_3.setCurrentWidget(self.page_10)

    def pushButton_18_clicked(self):
        self.stackedWidget_3.setCurrentWidget(self.page_2)

    def pushButton_17_clicked(self):
        self.stackedWidget_3.setCurrentWidget(self.page)

    def pushButton_20_clicked(self):
        self.lineEdit_2.clear()
        self.lineEdit.clear()
        self.comboBox.setCurrentIndex(0)
        self.stackedWidget.setCurrentWidget(self.loginPage)

    def display_chart(self):
        chart = self.comboBox.currentText()
        if chart == 'Daily Balance Average':
            data = self.df.groupby('trasaction_day').mean()['balance']
            x = list(data.index)
            y = list(data.values)
            title = 'AVERAGE DAILY MPESA BALANCE'

            self.load_line_graph(title, y, x)
        elif chart == "Daily Spend Average":
            data = self.df.groupby('trasaction_day').mean()['transaction_amount']
            x = list(data.index)
            y = list(data.values)
            title = 'AVERAGE DAILY SPEND'

            self.load_line_graph(title, y, x)

        elif chart == 'Top 10 spenders':
            data = self.df[self.df.paid_in_or_withdrawn == 'WITHDRAWN'].groupby(
                'transaction_party').sum().transaction_amount.sort_values(ascending=False).head(10)
            x = list(data.index)
            y = list(data.values)
            title = 'TOP 10 SPENDERS'

            self.load_bar_chart(title, y, x)

        elif chart == 'Top 10 Incomes':
            data = self.df[self.df.paid_in_or_withdrawn == 'PAID IN'].groupby(
                'transaction_party').sum().transaction_amount.sort_values(ascending=False).head(10)
            x = list(data.index)
            y = list(data.values)
            title = 'TOP 10 INCOMES'

            self.load_bar_chart(title, y, x)

        elif chart == 'Top 10  Transaction types (Amount)':
            data = self.df.groupby('transaction_type').sum()['transaction_amount'].sort_values(
                ascending=False).head(10)
            x = list(data.index)
            y = list(data.values)
            title = 'TOP 10 TRANSACTION TYPES RANKED BY AMOUNT'

            self.load_bar_chart(title, y, x)

        elif chart == 'Top 10  Transaction types (Frequency)':
            data = self.df.groupby('transaction_type').count()['transaction_amount'].sort_values(
                ascending=False).head(10)
            x = list(data.index)
            y = list(data.values)
            title = 'TOP 10 TRANSACTION TYPES RANKED BY FREQUENCY OF TRANSACTIONS'

            self.load_bar_chart(title, y, x)

        elif chart == 'Top 10  Most Transacted With Parties (Amount)':
            data = self.df.groupby('transaction_party').sum()['transaction_amount'].sort_values(
                ascending=False).head(10)
            x = list(data.index)
            y = list(data.values)
            title = 'TOP 10 MOST TRANSACTED WITH PARTIES RANKED BY AMOUNT TRANSACTED'

            self.load_bar_chart(title, y, x)

        elif chart == 'Top 10  Most Transacted With Parties (Frequency)':
            data = self.df.groupby('transaction_party').count()['transaction_amount'].sort_values(
                ascending=False).head(10)
            x = list(data.index)
            y = list(data.values)
            title = 'TOP 10 MOST TRANSACTED WITH PARTIES RANKED BY FREQUENCY OF TRANSACTIONS'

            self.load_bar_chart(title, y, x)

        elif chart == 'Money in vs Money (Amount)':
            data = self.df.groupby('paid_in_or_withdrawn').sum()['transaction_amount']
            x = list(data.index)
            y = list(data.values)
            title = 'MONEY IN VS MONEY OUT RANKED BY AMOUNT'

            self.load_bar_chart(title, y, x)

        elif chart == 'Money in vs Money (Frequency)':
            data = self.df.groupby('paid_in_or_withdrawn').count()['transaction_amount']
            x = list(data.index)
            y = list(data.values)
            title = 'MONEY IN VS MONEY OUT RANKED BY FREQUENCY'

            self.load_bar_chart(title, y, x)

        elif chart == 'Least 10 Spenders':
            data = self.df[self.df.paid_in_or_withdrawn == 'WITHDRAWN'].groupby(
                'transaction_party').sum().transaction_amount.sort_values(ascending=False).tail(10)
            x = list(data.index)
            x.reverse()
            y = list(data.values)
            y.reverse()
            title = 'TOP 10 LEAST SPENDERS'

            self.load_bar_chart(title, y, x)

        elif chart == 'Least 10 Incomes':
            data = self.df[self.df.paid_in_or_withdrawn == 'PAID IN'].groupby(
                'transaction_party').sum().transaction_amount.sort_values(ascending=False).tail(10)
            x = list(data.index)
            x.reverse()
            y = list(data.values)
            y.reverse()

            title = 'LEAST 10 INCOMES'

            self.load_bar_chart(title, y, x)


        elif chart == 'Leat 10 Transaction Types (Amount)':
            data = self.df.groupby('transaction_type').sum()['transaction_amount'].sort_values(
                ascending=False).tail(10)
            x = list(data.index)
            y = list(data.values)
            title = 'LEAST 10 TRANSACTION TYPES RANKED BY AMOUNT'
            y.reverse()
            x.reverse()

            self.load_bar_chart(title, y, x)

        elif chart == 'Least 10 Transaction Types (Frequency)':
            data = self.df.groupby('transaction_type').count()['transaction_amount'].sort_values(
                ascending=False).tail(10)
            x = list(data.index)
            y = list(data.values)
            y.reverse()
            x.reverse()
            title = 'LEAST 10 TRANSACTION TYPES RANKED BY FREQUENCY OF TRANSACTIONS'

            self.load_bar_chart(title, y, x)

        elif chart == 'Leat 10  Most Transacted With Parties (Amount)':
            data = self.df.groupby('transaction_party').sum()['transaction_amount'].sort_values(
                ascending=False).tail(10)
            x = list(data.index)
            y = list(data.values)
            y.reverse()
            x.reverse()
            title = 'LEAST 10 MOST TRANSACTED WITH PARTIES RANKED BY AMOUNT TRANSACTED'

            self.load_bar_chart(title, y, x)

        elif chart == 'Least 10  Most Transacted With Parties (Frequency)':
            data = self.df.groupby('transaction_party').count()['transaction_amount'].sort_values(
                ascending=False).tail(10)
            x = list(data.index)
            y = list(data.values)
            y.reverse()
            x.reverse()
            title = 'Least 10 MOST TRANSACTED WITH PARTIES RANKED BY FREQUENCY OF TRANSACTIONS'

            self.load_bar_chart(title, y, x)

    def load_line_graph(self, title, y_data_list, x_data_list):
        self.series = QtCharts.QLineSeries()

        for i in range(len(y_data_list)):
            x = x_data_list[i]
            y = y_data_list[i]
            self.series.append(QPointF(x, y))

        self.chart = QtCharts.QChart()
        self.chart.legend().hide()
        self.chart.addSeries(self.series)
        self.chart.createDefaultAxes()
        self.chart.setTitle(title)

        self.chartView = QtCharts.QChartView(self.chart)
        self.chartView.setRenderHint(QPainter.Antialiasing)

        self.chart.setAnimationOptions(QtCharts.QChart.AllAnimations)

        self.chartView.chart().setTheme(QtCharts.QChart.ChartThemeDark)

        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.chartView.sizePolicy().hasHeightForWidth())
        self.chartView.setSizePolicy(sizePolicy)

        self.chartView.setMinimumSize(QSize(0, 300))
        self.percentage_bar_chart_cont.addWidget(self.chartView, 0, 0, 9, 9)

        self.frame_15.setStyleSheet(u"background-color: transparent")

    def load_bar_chart(self, title, y_data_list, category_list):
        set0 = QtCharts.QBarSet("Amount")
        set0.append(y_data_list)
        print(y_data_list)

        series = QtCharts.QBarSeries()
        series.append(set0)

        chart = QtCharts.QChart()
        chart.addSeries(series)
        chart.setTitle(title)
        chart.setAnimationOptions(QtCharts.QChart.SeriesAnimations)

        categories = category_list
        axis = QtCharts.QBarCategoryAxis()
        axis.append(categories)
        axis.setLabelsAngle(270)
        chart.createDefaultAxes()
        chart.setAxisX(axis, series)

        chart.legend().setVisible(False)
        # chart.legend().setAlignment(Qt.AlignRight)

        self.chart_view = QtCharts.QChartView(chart)
        self.chart_view.setRenderHint(QPainter.Antialiasing)
        self.chart_view.chart().setTheme(QtCharts.QChart.ChartThemeDark)
        print('WHOAAA')

        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.chart_view.sizePolicy().hasHeightForWidth())
        self.chart_view.setSizePolicy(sizePolicy)
        self.chart_view.setMinimumSize(QSize(0, 300))
        self.percentage_bar_chart_cont.addWidget(self.chart_view, 0, 0, 9, 9)
        self.frame.setStyleSheet(u"background-color: transparent")

    def load_data(self):
        querry = f'SELECT * FROM mtracker.{self.session_username};'
        self.df = pd.read_sql(querry, self.db)
        self.df.set_index('receipt', inplace=True)
        print(self.df)

    def pushButton_clicked(self):
        email = self.lineEdit.text()
        passwrd = self.lineEdit_2.text()

        try:
            self.mycursor.execute('SELECT pass, username FROM mtracker.logins WHERE email_address = %s '
                                  'or username = %s;', (email, email))
            data = [i for i in self.mycursor][0]
            passwd = data[0]
            self.session_username = data[1]

            if passwd == passwrd:
                self.stackedWidget.setCurrentWidget(self.Homepage)
                self.load_data()

                # v = self.df.groupby('transaction_type').sum()['transaction_amount'].sort_values(ascending = False)
                # y_axis = list(v.values)
                # x_axis = list(v.index)
                # name = 'Total amount transacted per merchant'
                #
                # self.load_bar_chart(name, y_axis, x_axis)
                self.display_chart()

            else:
                messagebox = QMessageBox()
                messagebox.setWindowTitle("Incorrect credentials")
                messagebox.setIcon(QMessageBox.Warning)
                messagebox.setText("Incorrect username or pasword!")
                x = messagebox.exec_()

        except:
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Registration successfull")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("Incorrect username or pasword!")
            x = messagebox.exec_()

    def pushButton_12_clicked(self):
        username = self.signup_credentials[0]
        email = self.signup_credentials[1]
        fname = self.signup_details[1]
        lname = self.signup_details[2]

        company = "M-Tracker"
        body = f"Dear {fname} {lname}," \
               f"\n" \
               f"\n" \
               f"Welcome to M-Tracker, your personal finance analyzer! We are thrilled that you have chosen our " \
               f"platform to help you understand your financial behavior. This email is to confirm that your " \
               f"sign-up has been successful and that you can now start using Mtracker to track your finances. \n" \
               f"\n" \
               f"Your username for logging into Mtracker is: {username}\n" \
               f"\n" \
               f"We understand that managing finances can be overwhelming, but our platform is designed to make it " \
               f"easy for you to stay on top of your finances. With M-Tracker, you can track your expenses, income, " \
               f"and set budgets to achieve financial stability.\n" \
               f"\n" \
               f"We encourage you to explore our platform and take advantage of our features to help you understand " \
               f"your finances clearly. Our customer support team is always available to assist you with any " \
               f"questions you may have.\n" \
               f"\n" \
               f"Once again, we would like to welcome you to M-Tracker, and we are excited to have you as a part of our community." \
               f"\n\n" \
               f"\n" \
               f"Best regards," \
               f"\n\n" \
               f"{company}."

        subject = "Welcome to M-Tracker"

        message = f'subject: {subject} \n\n{body}'
        try:
            self.sendmail(email, message)
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Registration successfull")
            messagebox.setIcon(QMessageBox.Information)
            messagebox.setText("Your account has been created successfully! \n"
                               "Please log in using your username(sent to your\n"
                               "email) or your email address to enjoy our \n"
                               "full features!")
            x = messagebox.exec_()

            self.stackedWidget_2.setCurrentWidget(self.page_3)
            self.lineEdit_3.clear()
            self.lineEdit_4.clear()
            self.lineEdit_5.clear()
            self.lineEdit_6.clear()
            self.lineEdit_8.clear()
            self.stackedWidget.setCurrentWidget(self.loginPage)
        except:
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Error")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("An unexpected error occured. Ensure you\n"
                               "have a steady internet connection!")
            x = messagebox.exec_()

    def remove_comma(self, x):
        x = str(x)
        x = x.replace(',', '')
        return x

    def get_transaction(self, x):
        x = str(x).strip()
        if x.startswith('Merchant Payment'):
            index = x.find(' - ') + 3
            name = x[index:].strip().upper()

            return 'BUY GOODS', name

        elif x.startswith('Deposit of Funds'):
            index = x.find(' - ') + 3
            name = x[index:].strip().upper()
            return 'AGENT DEPOSIT', name


        elif x.startswith('OD Loan Repayment'):
            return 'FULIZA REPAYMENT', 'FULIZA'

        elif x.startswith('OverDraft of Credit Party'):
            return 'FULIZA TAKEN', 'FULIZA'

        elif x.startswith('M-Shwari Deposit'):
            return 'MSHWARI DEPOSIT FROM MPESA', 'MSHWARI'

        elif x.startswith('KCB M-PESA Deposit'):
            return 'KCB MPESA DEPOSIT FROM MPESA', 'MSHWARI'

        elif x.startswith('KCB M-PESA Withdraw'):
            return 'KCB MPESA WITHDRAW TO MPESA', 'KCB'

        elif x.startswith('Customer Transfer of Funds Charge'):
            return 'TRANSACTION COST', 'TRANSACTION COST'

        elif x.startswith('Customer Transfer'):
            index = x.find(' - ') + 3
            to_search = x[index:]
            last_ = 1

            for i in range(len(to_search)):
                try:
                    int(to_search[i])
                    last_ = i

                except:
                    v = 10
            name = x[index + last_ + 2:].strip().upper()

            return 'SEND MONEY', name

        elif x.startswith('M-Shwari Withdraw'):
            return 'M-SHWARI WITHDRAWAL TO MPESA', 'MSHWARI'

        elif x.startswith('Pay Bill'):
            if x.strip() == 'Pay Bill Charge':
                return 'PAY BILL CHARGES', 'TRANSACTION COST'
            else:
                index = x.find(' - ') + 3
                end = x.lower().find('acc')
                name = x[index:end].strip().upper()
                return 'PAY BILL', name

        elif x.startswith('Funds received'):
            index = x.find(' - ') + 3
            to_search = x[index:]
            last_ = 1

            for i in range(len(to_search)):
                try:
                    int(to_search[i])
                    last_ = i

                except:
                    v = 10
            name = x[index + last_ + 2:].strip().upper()
            return 'RECEIVE FUNDS FROM PERSON', name

        elif x.startswith('Customer Payment to Small Business') or x.startswith('Customer Send Money'):
            index = x.find(' - ') + 3
            to_search = x[index:]
            last_ = 1

            for i in range(len(to_search)):
                try:
                    int(to_search[i])
                    last_ = i

                except:
                    v = 10
            name = x[index + last_ + 2:].strip().upper()
            return 'POCHI LA BIASHARA', name

        elif x.startswith('Airtime Purchase'):
            return 'AIRTIME PURCHASE', 'AIRTIME'

        elif x.startswith('Business Payment from'):
            index = x.find(' - ') + 3
            end = x.lower().find('via')

            to_search = x[index:]
            last_ = 1

            name = x[index:end].strip().upper()

            return 'FUNDS RECEIVED FROM BUSINESS', name



        elif x.startswith('Buy Bundles Online'):
            return 'BUNDLES PURCHASE', 'BUNDES PURCHASE'

        elif x.startswith('Customer Withdrawal'):
            index = x.find(' - ') + 3
            name = x[index:].strip().upper()
            return 'CASH WITHDRAWAL', name

        elif x.startswith('Withdrawal Charge'):
            return 'CASH WITHDRAWAL CHARGES', "TRANSACTION COST"

        elif x.startswith('Savings Contribution'):
            return 'TO HUSTLER FUND SAVINGS', 'HUSTLER FUND'

        elif x.startswith('Term Loan Disbursement for H- Fund') or x.startswith(
                'Term Loan Disbursement for H-Fund'):
            return 'HUSTLER FUND Disbursement'.upper(), 'HUSTLER FUND'

        elif x.startswith('Term Loan Repayment for H- Fund') or x.startswith('Term Loan Repayment for H-Fund'):
            return 'HUSTLER FUND REPAYMENT', 'HUSTLER FUND'

        else:
            return 'UNIDENTIFIED', 'UNIDENTIFIED'

    def process_statement(self):
        username = self.yusanem
        path = 'statements\dencrypted.pdf'

        self.label_26.setText('Initializing...')
        self.progressBar.setValue(3)
        QApplication.processEvents()
        time.sleep(1)

        self.label_26.setText('Uploading your statements')
        self.progressBar.setValue(5)
        QApplication.processEvents()
        time.sleep(0.5)

        self.label_26.setText('Unlocking statements')
        self.progressBar.setValue(6)
        QApplication.processEvents()
        time.sleep(0.5)

        with open(path, 'rb') as file:
            pdf_reader = PyPDF2.PdfReader(file)
            num_pages = len(pdf_reader.pages)

        self.label_26.setText('Statements unlocked')
        self.progressBar.setValue(7)
        QApplication.processEvents()

        perc = round((42 / num_pages), 2)
        status_bar_now = perc + 8

        self.label_26.setText('Reading your statements...')
        self.progressBar.setValue(8)
        QApplication.processEvents()

        for page_number in range(1, num_pages + 1):

            if page_number == 1:
                df = read_pdf(path, pages=page_number)
                data = df[2]

                return_df = data
            else:
                df = read_pdf(path, pages=page_number)
                data = df[0]

            if page_number != 1:
                return_df = pd.concat([return_df, data])

            self.label_26.setText(
                f'Reading page {page_number} of your statements || This process may take a long time')
            self.progressBar.setValue(status_bar_now)
            QApplication.processEvents()
            status_bar_now += perc

        self.label_26.setText(f'Reading done...')
        self.progressBar.setValue(50)
        QApplication.processEvents()
        time.sleep(1)

        self.label_26.setText(f'Cleaning extracted data')
        self.progressBar.setValue(51)
        QApplication.processEvents()
        time.sleep(1)
        print(return_df)

        real_data = return_df.copy()

        real_data["Paid In"] = real_data["Paid In"].apply(lambda x: self.remove_comma(x))

        self.label_26.setText(f'Cleaning paid in data')
        self.progressBar.setValue(52)
        QApplication.processEvents()
        time.sleep(0.2)

        real_data["Withdrawn"] = real_data["Withdrawn"].apply(lambda x: self.remove_comma(x))

        self.label_26.setText(f'Cleaning withdrawn transactions data')
        self.progressBar.setValue(53)
        QApplication.processEvents()
        time.sleep(0.2)

        real_data["Balance"] = real_data["Balance"].apply(lambda x: self.remove_comma(x))
        self.label_26.setText(f'Cleaning balance data')
        self.progressBar.setValue(54)
        QApplication.processEvents()
        time.sleep(0.2)

        # Convert to float datatype

        real_data = real_data.astype({
            "Paid In": float,
            "Withdrawn": float,
            'Balance': float
        })
        self.label_26.setText(f'Setting right datatypes')
        self.progressBar.setValue(55)
        QApplication.processEvents()
        time.sleep(0.2)

        real_data["Details"] = real_data["Details"].apply(lambda x: x.replace('\r', ' '))
        self.label_26.setText(f'Understanding transaction type and parties')
        self.progressBar.setValue(57)
        QApplication.processEvents()
        time.sleep(0.2)

        details = list(real_data['Details'].apply(lambda x: self.get_transaction(x)).values)
        transaction_type = [i[0] for i in details]
        transaction_party = [i[1] for i in details]

        dates = real_data['Completion Time'].apply(lambda x: self.extract_date(x)).values
        self.label_26.setText(f'Understanding transaction dates')
        self.progressBar.setValue(59)
        QApplication.processEvents()
        time.sleep(0.2)

        year = [i[0] for i in dates]
        month = [i[1] for i in dates]
        date = [i[2] for i in dates]
        weekday = [i[3] for i in dates]
        hour = [i[4] for i in dates]
        minute = [i[5] for i in dates]
        second = [i[6] for i in dates]

        trasaction_day = []

        reverse_date = date.copy()
        reverse_date.reverse()
        datex = reverse_date[0]

        d = 1

        for i in reverse_date:
            if i == datex:
                trasaction_day.append(d)
            else:
                datex = i
                d += 1
                trasaction_day.append(d)

        trasaction_day.reverse()
        receipt = list(real_data["Receipt No."].values)
        self.label_26.setText(f'Getting transaction receipts')
        self.progressBar.setValue(60)
        QApplication.processEvents()
        time.sleep(0.2)

        paid_in = real_data['Paid In'].fillna('NAN_VALUE').values
        withdrawn = list(real_data['Withdrawn'].apply(lambda x: self.withdrawal_amount(x)).values)

        self.label_26.setText(f'Understanding withdrawn cash details')
        self.progressBar.setValue(61)
        QApplication.processEvents()
        time.sleep(0.2)

        transaction_data = []

        for i in range(len(paid_in)):
            try:
                x = float(paid_in[i])
                transaction_data.append((x, 'PAID IN'))
            except:
                x = float(withdrawn[i])
                transaction_data.append((x, 'WITHDRAWN'))

        print(transaction_data)

        self.label_26.setText(f'Categorising transaction data...')
        self.progressBar.setValue(61)
        QApplication.processEvents()
        time.sleep(0.2)

        transaction_amount = [i[0] for i in transaction_data]
        paid_in_or_withdrawn = [i[1] for i in transaction_data]

        self.label_26.setText(f'Categorising transaction data...')
        self.progressBar.setValue(62)
        QApplication.processEvents()
        time.sleep(0.2)

        balance = list(real_data.Balance.values)

        self.progressBar.setValue(63)
        QApplication.processEvents()
        time.sleep(0.2)

        df = pd.DataFrame({
            'receipt': receipt,
            'trasaction_day': trasaction_day,
            'year': year,
            'month': month,
            'date': date,
            'weekday': weekday,
            'hour': hour,
            'minute': minute,
            'second': second,
            'transaction_type': transaction_type,
            'transaction_party': transaction_party,
            'transaction_amount': transaction_amount,
            'paid_in_or_withdrawn': paid_in_or_withdrawn,
            'balance': balance
        })

        df.set_index('receipt', inplace=True)

        self.label_26.setText(f'Finalising...')
        self.progressBar.setValue(62)
        QApplication.processEvents()
        time.sleep(1)

        self.label_26.setText(f'Saving data for exploration...')
        self.progressBar.setValue(62)
        QApplication.processEvents()
        time.sleep(0.2)

        engine = create_engine('mysql+pymysql://root:root@localhost/mtracker')
        df.reset_index(inplace=True)
        df.to_sql(name=username, con=engine, if_exists='replace', index=False)

        self.label_26.setText(f'Extracting M-Pesa statements successfull.')
        self.progressBar.setValue(65)
        QApplication.processEvents()
        time.sleep(1)

        self.label_26.setText(f'Creating models for your data.')
        self.progressBar.setValue(66)
        QApplication.processEvents()
        time.sleep(1.5)

        self.label_26.setText(f'Getting your transaction data...')
        self.progressBar.setValue(67)
        QApplication.processEvents()
        time.sleep(1.5)

        # querry = f'SELECT * FROM mtracker.{username};'
        # print(querry)
        # engine = create_engine('mysql+pymysql://root:root@localhost/mtracker')
        # time.sleep(0.1)
        # df = pd.read_sql(querry, self.db)
        # print('done read sql')
        df.set_index('receipt', inplace=True)
        print('done 2')

        self.label_26.setText(f'Preparing for the creation of models...')
        self.progressBar.setValue(66)
        QApplication.processEvents()
        time.sleep(1.5)
        print('done 3')

        test = df.copy()

        test = test.groupby('trasaction_day').mean().reset_index()

        data = ['month', 'date']
        predict = 'transaction_amount'
        nearest_tens_balance = [round(x, -1) for x in list(test.balance.values)]
        nearest_hundreds_balance = [round(x, -2) for x in list(test.transaction_amount.values)]

        x = test[data]
        x.reset_index(inplace=True, drop=True)
        x = np.array(x)

        y = test[predict]
        y = np.array(y)

        linear = linear_model.LinearRegression()
        best = 0
        acc = 0
        trained = 0

        self.label_26.setText(f'Creating models...')
        self.progressBar.setValue(66)
        QApplication.processEvents()
        time.sleep(1.5)

        this_value = 66

        while acc < 0.6 and trained < 200000:
            x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y, test_size=0.1)

            linear.fit(x_train, y_train)
            acc = linear.score(x_test, y_test)

            if acc > best:
                model = linear
                print(f'Test number {trained}: {acc}')
                best = acc

            trained += 1

            this_value += (33 / 200000)

            self.progressBar.setValue(round(this_value))
            QApplication.processEvents()

            if trained < 50000:
                self.label_26.setText(f'Creating models... This might take about 10 minutes')
                QApplication.processEvents()

            elif trained > 50000 and trained < 150000:
                self.label_26.setText(f'Please be patient')
                QApplication.processEvents()

            elif trained > 150000 and trained < 170000:
                self.label_26.setText(f'Almost done... ')
                QApplication.processEvents()

            else:
                self.label_26.setText(f'Finishing up... ')
                QApplication.processEvents()

        print('Done withall that ML shit')
        model_to_db = pickle.dumps(model)
        self.signup_details.append(model_to_db)
        self.signup_details = tuple(self.signup_details)
        print(self.signup_details)

        self.mycursor.execute('INSERT INTO mtracker.personal_details VALUES (%s, %s,%s,%s,%s,%s,%s)',
                              self.signup_details)
        self.db.commit()

        self.signup_credentials = (self.signup_details[0], self.signup_details[3], self.signup_pass)
        print(self.signup_credentials)
        self.mycursor.execute('INSERT INTO mtracker.logins VALUES (%s, %s,%s)', self.signup_credentials)
        self.db.commit()

        self.progressBar.setValue(100)
        self.label_26.setText(f'Done! Press the finish button to continue')
        QApplication.processEvents()

    def withdrawal_amount(self, x):
        try:
            if x < 0:
                return -(x)
            else:
                return x
        except:
            return x

    def extract_date(self, date):
        date = parser.parse(date)
        return (date.year, date.month, date.day, date.weekday(), date.hour, date.minute, date.second)

    def pushButton_11_clicked(self):
        password = self.lineEdit_10.text()
        if self.file_path_selected is True:
            try:

                with pikepdf.open(self.file_path, password=password) as pdf:
                    pdf.save('statements\dencrypted.pdf')

                path = r":/gifs/gifs/icons8-spinner.gif"

                movie = QMovie(path)
                timed = QTimer()
                self.label_4.setMovie(movie)
                movie.start()
                timed.singleShot(1000, self.this_f_un_c)



            except:
                messagebox = QMessageBox()
                messagebox.setWindowTitle("Invalid password")
                messagebox.setIcon(QMessageBox.Warning)
                messagebox.setText("Invalid M-Pesa statement's password.\n"
                                   "Please enter a valid password or \n"
                                   "choose the correct statements")
                x = messagebox.exec_()

        else:
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Select statements")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("Please select your valid mpesa statements!")
            x = messagebox.exec_()

    def this_f_un_c(self):
        self.pushButton_5.setEnabled(False)
        self.pushButton_12.hide()
        self.label_26.setText('Initializing...')
        self.progressBar.setValue(1)
        QApplication.processEvents()
        self.stackedWidget_2.setCurrentWidget(self.page_6)
        self.label_4.clear()
        self.process_statement()
        self.pushButton_12.show()

    def pushButton_10_clicked(self):
        fileDialog = QFileDialog()
        fileDialog.setNameFilter("PDF file (*.pdf)")
        self.file_path, _ = fileDialog.getOpenFileName(Form, "Select M-Pesa statement", "",
                                                       "PDF (*.pdf)")

        file_name = os.path.basename(self.file_path)

        if file_name.startswith('MPESA_Statement'):
            self.pushButton_10.setStyleSheet('color: rgb(168, 168, 168);'
                                             'border: 1px solid rgb(168, 168, 168);'
                                             'border-radius:5px;')
            self.file_path_selected = True

        else:
            self.pushButton_10.setStyleSheet('color: rgb(255, 0, 4); '
                                             'border: 1px solid rgb(255, 0, 4); '
                                             'border-radius:5px;')
            self.file_path_selected = False

    def lineEdit_7_edited(self):
        password = self.lineEdit_7.text()
        has_num = any(i.isdigit() for i in password)
        if len(password) < 8:
            self.label_20.setText('Password is too short')
            self.signup_pass = "Short"
        elif has_num is False:
            self.label_20.setText('Password must include a number')
            self.signup_pass = "No number"

        else:
            self.label_20.setText('')
            self.signup_pass = "Good"

    def pushButton_6_clicked(self):
        # self.stackedWidget_2.setCurrentWidget(self.page_5)
        # self.update_signup_labels()
        if self.signup_pass == 'Good':
            if self.lineEdit_7.text() == self.lineEdit_9.text():
                self.signup_pass = self.lineEdit_7.text()
                self.stackedWidget_2.setCurrentWidget(self.page_5)
                self.update_signup_labels()
            else:
                self.label_22.setText('Passwords do not match')

        elif self.signup_pass == "No number":
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Password")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("Password is too short!")
            x = messagebox.exec_()

        elif self.signup_pass == "No number":
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Password")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("Password must include a number!")
            x = messagebox.exec_()

    def sign_up_checkbox(self, state):
        if state == Qt.Checked:
            self.pushButton_6.setEnabled(True)
        else:
            self.pushButton_6.setEnabled(False)

    def sendmail(self, send_email_address, message):
        server = smtplib.SMTP('smtp.gmail.com', 587)
        email_password = "awfocntdjwcygghj"
        QApplication.processEvents()

        server.ehlo()
        server.starttls()
        server.ehlo()
        server.login("assistant.mtracker@gmail.com", email_password)
        QApplication.processEvents()

        server.sendmail(
            "M-Tracker",
            send_email_address,
            message)
        QApplication.processEvents()

    def lineEdit_5_edited(self):
        email = self.lineEdit_5.text()
        querry = 'SELECT COUNT(*) FROM mtracker.personal_details WHERE email_address = %s;'
        self.mycursor.execute(querry, (email,))
        number = [i for i in self.mycursor][0][0]
        if number == 0:
            otp = self.get_otp()
            self.otp = otp

            company = "M-Tracker"
            body = f"Hello,\n\n" \
                   f"Thank you for your interest in M-Tracker. To complete your registration process, please use the " \
                   f"following verification code: \n\n{otp}\n\nPlease enter this code on the verification page within the" \
                   f" next 15 minutes to complete the verification process. \nIf you did not request this code, " \
                   f"please disregard this email and do not share the code with anyone. \nIf you have any questions or " \
                   f"concerns, please feel free to contact our support team at assistant.mtracker@gmail.com. \n\nThank you " \
                   f"for choosing M-Tracker! \n\nBest regards, \n\n{company}."

            subject = "Your Verification Code"

            message = f'subject: {subject} \n\n{body}'
            try:
                self.sendmail(email, message)
                self.label_11.setStyleSheet('color: rgb(0, 193, 0);')
                self.label_11.setText("Verification code to your email address")

            except:
                self.label_11.setStyleSheet('color: rgb(255, 0, 0);')
                self.label_11.setText("Error sending verification code to your email address")
        else:
            self.label_11.setStyleSheet('color: rgb(255, 0, 0);')
            self.label_11.setText("Email address is already linked to an account")

    def get_otp(self):
        otp = ""
        for i in range(6):
            otp = otp + (str(random.randint(0, 9)))

        QApplication.processEvents()

        return otp

    def username_generator(self, name):
        name = name.lower()
        try:
            i = 0
            done = False
            while done is False:
                querry = 'SELECT COUNT(*) FROM mtracker.personal_details WHERE username = %s;'
                self.mycursor.execute(querry, (name,))
                number = [i for i in self.mycursor][0][0]

                if number == 0:
                    done = True
                    return name
                else:
                    name = f'{name}{i}'
                    i += 1

        except:
            return 'error101__'

    def pushButton_4_clicked(self):
        # self.stackedWidget_2.setCurrentWidget(self.page_4)
        # self.update_signup_labels()
        # self.yusanem = 'username'
        fname = self.lineEdit_3.text()
        if fname == "":
            fname_done = False
        else:
            fname_done = True
        lname = self.lineEdit_4.text()
        if lname == "":
            lname_done = False
        else:
            lname_done = True
        email = self.lineEdit_5.text()
        otp = self.lineEdit_6.text()
        if otp == self.otp:
            otp_done = True
        else:
            otp_done = False
        phone = self.lineEdit_8.text()
        if len(phone) == 9:
            try:
                int(phone)
                phone_done = True
                phone = f'254{phone}'
            except:
                phone_done = False
        else:
            phone_done = False

        if self.radioButton_3.isChecked():
            gender = "Male"
        else:
            gender = 'Female'

        if fname_done is True and lname_done is True and phone_done is True and otp_done is True:
            username = self.username_generator(fname.lower())
            self.yusanem = username.lower()
            print(username)
            if username == 'error101__':
                messagebox = QMessageBox()
                messagebox.setWindowTitle("Error generating username")
                messagebox.setIcon(QMessageBox.Warning)
                messagebox.setText("There was an error generating your username\n"
                                   "Please restart M-Tracker!")
                x = messagebox.exec_()
            else:
                self.signup_details = [username, fname, lname, email, phone, gender]
                print(self.signup_details)
                self.stackedWidget_2.setCurrentWidget(self.page_4)
                self.update_signup_labels()
        elif fname_done is False:
            messagebox = QMessageBox()
            messagebox.setWindowTitle("First name")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("First name must not be blank!")
            x = messagebox.exec_()
        elif lname_done is False:
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Last name")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("Last name must not be blank!")
            x = messagebox.exec_()
        elif phone_done is False:
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Phone number")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("Please enter a valid phone number!")
            x = messagebox.exec_()
        elif otp_done is False:
            messagebox = QMessageBox()
            messagebox.setWindowTitle("Verification code")
            messagebox.setIcon(QMessageBox.Warning)
            messagebox.setText("Invalid verification code\nCheck the email in the spam folder!")
            x = messagebox.exec_()

    def update_signup_labels(self):
        current_widget = self.stackedWidget_2.currentIndex()
        if current_widget == 0:
            self.label_12.setStyleSheet('border-left:7px solid rgb(33, 43, 51); '
                                        'background-color: rgb(100, 100, 100);')
            self.label_13.setStyleSheet('background-color: rgb(100, 100, 100);')
            self.label_14.setStyleSheet('background-color: rgb(100, 100, 100);')
        elif current_widget == 1:
            self.label_13.setStyleSheet('border-left:7px solid rgb(33, 43, 51); '
                                        'background-color: rgb(100, 100, 100);')
            self.label_12.setStyleSheet('background-color: rgb(100, 100, 100);')
            self.label_14.setStyleSheet('background-color: rgb(100, 100, 100);')
        else:
            self.label_14.setStyleSheet('border-left:7px solid rgb(33, 43, 51); '
                                        'background-color: rgb(100, 100, 100);')
            self.label_12.setStyleSheet('background-color: rgb(100, 100, 100);')
            self.label_13.setStyleSheet('background-color: rgb(100, 100, 100);')

    def showpass(self, led, state_index):
        if state_index == 0:
            if self.signuppass_state is True:
                led.setEchoMode(QtWidgets.QLineEdit.Normal)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-open-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_9.setIcon(icon1)
                self.signuppass_state = False
            else:
                led.setEchoMode(QtWidgets.QLineEdit.Password)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_9.setIcon(icon1)
                self.signuppass_state = True

        elif state_index == 1:
            if self.reset_new_pass is True:
                led.setEchoMode(QtWidgets.QLineEdit.Normal)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-open-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_14.setIcon(icon1)
                self.reset_new_pass = False
            else:
                led.setEchoMode(QtWidgets.QLineEdit.Password)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_14.setIcon(icon1)
                self.reset_new_pass = True

        elif state_index == 2:
            if self.reset_confirm_pass is True:
                led.setEchoMode(QtWidgets.QLineEdit.Normal)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-open-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_13.setIcon(icon1)
                self.reset_confirm_pass = False
            else:
                led.setEchoMode(QtWidgets.QLineEdit.Password)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_13.setIcon(icon1)
                self.reset_confirm_pass = True

        elif state_index == 3:
            if self.repeat_set_password is True:
                led.setEchoMode(QtWidgets.QLineEdit.Normal)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-open-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_7.setIcon(icon1)
                self.repeat_set_password = False
            else:
                led.setEchoMode(QtWidgets.QLineEdit.Password)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_7.setIcon(icon1)
                self.repeat_set_password = True

        elif state_index == 4:
            if self.set_password is True:
                led.setEchoMode(QtWidgets.QLineEdit.Normal)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-open-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_8.setIcon(icon1)
                self.set_password = False
            else:
                led.setEchoMode(QtWidgets.QLineEdit.Password)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-lock-384.png"), QtGui.QIcon.Normal,
                                QtGui.QIcon.Off)
                self.pushButton_8.setIcon(icon1)
                self.set_password = True

    def pushButton_3_clicked(self):
        self.stackedWidget.setCurrentWidget(self.ResetPassword)

    def pushButton_2_clicked(self):
        self.stackedWidget.setCurrentWidget(self.SignupPage)
        self.stackedWidget_2.setCurrentWidget(self.page_3)

        self.update_signup_labels()
        QApplication.processEvents()

    def pushButton_5_clicked(self):
        self.stackedWidget.setCurrentWidget(self.loginPage)
        self.update_signup_labels()
        QApplication.processEvents()


import resources_rc
import random
import smtplib
from PyQt5.QtWidgets import QMessageBox, QFileDialog, QApplication, QMainWindow, QProgressBar, \
    QPushButton, QVBoxLayout, QWidget, QLabel
from PyQt5.QtCore import Qt, QTimer
from PyQt5.QtGui import QMovie
import os
import pandas as pd
import numpy as np
from tabula import read_pdf
import PyPDF2
import matplotlib.pyplot as plt
import pikepdf
from sqlalchemy import create_engine
from dateutil import parser
import mysql.connector
import time
import sklearn
from sklearn import linear_model
import mysql.connector
from matplotlib import pyplot as plt
import pickle
from PySide2.QtCore import *
from PySide2.QtGui import *
from PySide2.QtWidgets import *

from PyQt5 import QtCore, QtGui, QtWidgets
from PySide2 import *
from PySide2.QtCharts import QtCharts
from PyQt5.QtChart import QChart, QBarSet, QBarSeries, QBarCategoryAxis

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
